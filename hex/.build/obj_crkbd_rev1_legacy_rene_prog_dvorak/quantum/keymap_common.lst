   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB113:
  16               		.file 1 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #    include <util/delay.h>
  24:quantum/keymap_common.c **** #    include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "quantum.h"
  30:quantum/keymap_common.c **** 
  31:quantum/keymap_common.c **** #ifdef BACKLIGHT_ENABLE
  32:quantum/keymap_common.c **** #    include "backlight.h"
  33:quantum/keymap_common.c **** #endif
  34:quantum/keymap_common.c **** 
  35:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  36:quantum/keymap_common.c **** #    include "process_midi.h"
  37:quantum/keymap_common.c **** #endif
  38:quantum/keymap_common.c **** 
  39:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  40:quantum/keymap_common.c **** 
  41:quantum/keymap_common.c **** #include <inttypes.h>
  42:quantum/keymap_common.c **** 
  43:quantum/keymap_common.c **** /* converts key to action */
  44:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key) {
  45:quantum/keymap_common.c ****     // 16bit keycodes - important
  46:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  47:quantum/keymap_common.c **** 
  48:quantum/keymap_common.c ****     // keycode remapping
  49:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  50:quantum/keymap_common.c **** 
  51:quantum/keymap_common.c ****     action_t action = {};
  52:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
  53:quantum/keymap_common.c **** 
  54:quantum/keymap_common.c ****     (void)action_layer;
  55:quantum/keymap_common.c ****     (void)when;
  56:quantum/keymap_common.c ****     (void)mod;
  57:quantum/keymap_common.c **** 
  58:quantum/keymap_common.c ****     switch (keycode) {
  59:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  60:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  61:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c **** #ifdef EXTRAKEY_ENABLE
  64:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  65:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  66:quantum/keymap_common.c ****             break;
  67:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
  68:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  69:quantum/keymap_common.c ****             break;
  70:quantum/keymap_common.c **** #endif
  71:quantum/keymap_common.c **** #ifdef MOUSEKEY_ENABLE
  72:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  73:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  74:quantum/keymap_common.c ****             break;
  75:quantum/keymap_common.c **** #endif
  76:quantum/keymap_common.c ****         case KC_TRNS:
  77:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  78:quantum/keymap_common.c ****             break;
  79:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX:;
  80:quantum/keymap_common.c ****             // Has a modifier
  81:quantum/keymap_common.c ****             // Split it up
  82:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF);  // adds modifier to key
  83:quantum/keymap_common.c ****             break;
  84:quantum/keymap_common.c **** #ifndef NO_ACTION_FUNCTION
  85:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  86:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX:;
  89:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  90:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  91:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action((int)keycode & 0xFFF);
  92:quantum/keymap_common.c ****             break;
  93:quantum/keymap_common.c **** #endif
  94:quantum/keymap_common.c **** #ifndef NO_ACTION_MACRO
  95:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  96:quantum/keymap_common.c ****             if (keycode & 0x800)  // tap macros have upper bit set
  97:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  98:quantum/keymap_common.c ****             else
  99:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
 100:quantum/keymap_common.c ****             break;
 101:quantum/keymap_common.c **** #endif
 102:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 103:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
 104:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
 105:quantum/keymap_common.c ****             break;
 106:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 107:quantum/keymap_common.c ****             // Layer set "GOTO"
 108:quantum/keymap_common.c ****             when         = (keycode >> 0x4) & 0x3;
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 110:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX:;
 113:quantum/keymap_common.c ****             // Momentary action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 118:quantum/keymap_common.c ****             // Set default action_layer
 119:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 123:quantum/keymap_common.c ****             // Set toggle
 124:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 125:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 126:quantum/keymap_common.c ****             break;
 127:quantum/keymap_common.c **** #endif
 128:quantum/keymap_common.c **** #ifndef NO_ACTION_ONESHOT
 129:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX:;
 130:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 131:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 132:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 135:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 136:quantum/keymap_common.c ****             mod         = mod_config(keycode & 0xFF);
 137:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 138:quantum/keymap_common.c ****             break;
 139:quantum/keymap_common.c **** #endif
 140:quantum/keymap_common.c **** #ifndef NO_ACTION_LAYER
 141:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 142:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 145:quantum/keymap_common.c ****             mod          = mod_config(keycode & 0xF);
 146:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 147:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 148:quantum/keymap_common.c ****             break;
 149:quantum/keymap_common.c **** #endif
 150:quantum/keymap_common.c **** #ifndef NO_ACTION_TAPPING
 151:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 152:quantum/keymap_common.c ****             mod         = mod_config((keycode >> 0x8) & 0x1F);
 153:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 154:quantum/keymap_common.c ****             break;
 155:quantum/keymap_common.c **** #endif
 156:quantum/keymap_common.c **** #ifdef SWAP_HANDS_ENABLE
 157:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 158:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 159:quantum/keymap_common.c ****             break;
 160:quantum/keymap_common.c **** #endif
 161:quantum/keymap_common.c **** 
 162:quantum/keymap_common.c ****         default:
 163:quantum/keymap_common.c ****             action.code = ACTION_NO;
 164:quantum/keymap_common.c ****             break;
 165:quantum/keymap_common.c ****     }
 166:quantum/keymap_common.c ****     return action;
 167:quantum/keymap_common.c **** }
 168:quantum/keymap_common.c **** 
 169:quantum/keymap_common.c **** __attribute__((weak)) const uint16_t PROGMEM fn_actions[] = {
 170:quantum/keymap_common.c **** 
 171:quantum/keymap_common.c **** };
 172:quantum/keymap_common.c **** 
 173:quantum/keymap_common.c **** /* Macro */
 174:quantum/keymap_common.c **** __attribute__((weak)) const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
  17               		.loc 1 174 101 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 174 103 view .LVU1
  24               		.loc 1 174 1 is_stmt 0 view .LVU2
  25 0000 90E0      		ldi r25,0
  26 0002 80E0      		ldi r24,0
  27               	.LVL1:
  28               	/* epilogue start */
  29               		.loc 1 174 1 view .LVU3
  30 0004 0895      		ret
  31               		.cfi_endproc
  32               	.LFE113:
  34               		.section	.text.action_function,"ax",@progbits
  35               		.weak	action_function
  37               	action_function:
  38               	.LVL2:
  39               	.LFB114:
 175:quantum/keymap_common.c **** 
 176:quantum/keymap_common.c **** /* Function */
 177:quantum/keymap_common.c **** __attribute__((weak)) void action_function(keyrecord_t *record, uint8_t id, uint8_t opt) {}
  40               		.loc 1 177 90 is_stmt 1 view -0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               		.loc 1 177 91 view .LVU5
  47               	/* epilogue start */
  48               		.loc 1 177 1 is_stmt 0 view .LVU6
  49 0000 0895      		ret
  50               		.cfi_endproc
  51               	.LFE114:
  53               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  54               		.weak	keymap_key_to_keycode
  56               	keymap_key_to_keycode:
  57               	.LVL3:
  58               	.LFB115:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** // translates key to keycode
 180:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key) {
  59               		.loc 1 180 83 is_stmt 1 view -0
  60               		.cfi_startproc
  61               	/* prologue: function */
  62               	/* frame size = 0 */
  63               	/* stack size = 0 */
  64               	.L__stack_usage = 0
  65               		.loc 1 180 83 is_stmt 0 view .LVU8
  66 0000 972F      		mov r25,r23
 181:quantum/keymap_common.c ****     // Read entire word (16bits)
 182:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
  67               		.loc 1 182 5 is_stmt 1 view .LVU9
  68               	.LBB2:
  69               		.loc 1 182 12 view .LVU10
  70 0002 70E0      		ldi r23,0
  71               		.loc 1 182 12 is_stmt 0 view .LVU11
  72 0004 26E0      		ldi r18,lo8(6)
  73 0006 929F      		mul r25,r18
  74 0008 600D      		add r22,r0
  75 000a 711D      		adc r23,r1
  76 000c 1124      		clr __zero_reg__
  77               	.LVL4:
  78               		.loc 1 182 12 view .LVU12
  79 000e FB01      		movw r30,r22
  80 0010 90E3      		ldi r25,lo8(48)
  81 0012 899F      		mul r24,r25
  82 0014 E00D      		add r30,r0
  83 0016 F11D      		adc r31,r1
  84 0018 1124      		clr __zero_reg__
  85 001a EE0F      		lsl r30
  86 001c FF1F      		rol r31
  87               	.LVL5:
  88               		.loc 1 182 12 view .LVU13
  89 001e E050      		subi r30,lo8(-(keymaps))
  90 0020 F040      		sbci r31,hi8(-(keymaps))
  91               	.LVL6:
  92               		.loc 1 182 12 is_stmt 1 view .LVU14
  93               		.loc 1 182 12 view .LVU15
  94               	/* #APP */
  95               	 ;  182 "quantum/keymap_common.c" 1
  96 0022 8591      		lpm r24, Z+
  97 0024 9491      		lpm r25, Z
  98               		
  99               	 ;  0 "" 2
 100               	.LVL7:
 101               		.loc 1 182 12 view .LVU16
 102               	/* #NOAPP */
 103               	/* epilogue start */
 104               	.LBE2:
 183:quantum/keymap_common.c **** }
 105               		.loc 1 183 1 is_stmt 0 view .LVU17
 106 0026 0895      		ret
 107               		.cfi_endproc
 108               	.LFE115:
 110               		.section	.text.action_for_key,"ax",@progbits
 111               	.global	action_for_key
 113               	action_for_key:
 114               	.LVL8:
 115               	.LFB112:
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 116               		.loc 1 44 54 is_stmt 1 view -0
 117               		.cfi_startproc
  44:quantum/keymap_common.c ****     // 16bit keycodes - important
 118               		.loc 1 44 54 is_stmt 0 view .LVU19
 119 0000 CF93      		push r28
 120               	.LCFI0:
 121               		.cfi_def_cfa_offset 3
 122               		.cfi_offset 28, -2
 123 0002 DF93      		push r29
 124               	.LCFI1:
 125               		.cfi_def_cfa_offset 4
 126               		.cfi_offset 29, -3
 127               	/* prologue: function */
 128               	/* frame size = 0 */
 129               	/* stack size = 2 */
 130               	.L__stack_usage = 2
  46:quantum/keymap_common.c **** 
 131               		.loc 1 46 5 is_stmt 1 view .LVU20
  46:quantum/keymap_common.c **** 
 132               		.loc 1 46 24 is_stmt 0 view .LVU21
 133 0004 0E94 0000 		call keymap_key_to_keycode
 134               	.LVL9:
  49:quantum/keymap_common.c **** 
 135               		.loc 1 49 5 is_stmt 1 view .LVU22
  49:quantum/keymap_common.c **** 
 136               		.loc 1 49 15 is_stmt 0 view .LVU23
 137 0008 0E94 0000 		call keycode_config
 138               	.LVL10:
  49:quantum/keymap_common.c **** 
 139               		.loc 1 49 15 view .LVU24
 140 000c EC01      		movw r28,r24
 141               	.LVL11:
  51:quantum/keymap_common.c ****     uint8_t  action_layer, when, mod;
 142               		.loc 1 51 5 is_stmt 1 view .LVU25
  52:quantum/keymap_common.c **** 
 143               		.loc 1 52 5 view .LVU26
  54:quantum/keymap_common.c ****     (void)when;
 144               		.loc 1 54 5 view .LVU27
  55:quantum/keymap_common.c ****     (void)mod;
 145               		.loc 1 55 5 view .LVU28
  56:quantum/keymap_common.c **** 
 146               		.loc 1 56 5 view .LVU29
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 147               		.loc 1 58 5 view .LVU30
 148 000e 8115      		cp r24,__zero_reg__
 149 0010 22E5      		ldi r18,82
 150 0012 9207      		cpc r25,r18
 151 0014 00F4      		brsh .L5
 152 0016 8115      		cp r24,__zero_reg__
 153 0018 31E5      		ldi r19,81
 154 001a 9307      		cpc r25,r19
 155 001c 00F0      		brlo .+2
 156 001e 00C0      		rjmp .L6
 157 0020 883E      		cpi r24,-24
 158 0022 9105      		cpc r25,__zero_reg__
 159 0024 00F4      		brsh .L7
 160 0026 803E      		cpi r24,-32
 161 0028 9105      		cpc r25,__zero_reg__
 162 002a 00F4      		brsh .L8
 163 002c 883A      		cpi r24,-88
 164 002e 9105      		cpc r25,__zero_reg__
 165 0030 00F4      		brsh .L9
 166 0032 853A      		cpi r24,-91
 167 0034 9105      		cpc r25,__zero_reg__
 168 0036 00F0      		brlo .+2
 169 0038 00C0      		rjmp .L10
 170 003a 8130      		cpi r24,1
 171 003c 9105      		cpc r25,__zero_reg__
 172 003e 01F0      		breq .L8
 173 0040 0097      		sbiw r24,0
 174 0042 01F0      		breq .L8
 175 0044 0497      		sbiw r24,4
 176 0046 00F4      		brsh .L8
 177               	.LVL12:
 178               	.L28:
 163:quantum/keymap_common.c ****             break;
 179               		.loc 1 163 25 is_stmt 0 view .LVU31
 180 0048 D0E0      		ldi r29,0
 181 004a C0E0      		ldi r28,0
 182 004c 00C0      		rjmp .L8
 183               	.LVL13:
 184               	.L9:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 185               		.loc 1 58 5 view .LVU32
 186 004e 8F3B      		cpi r24,-65
 187 0050 9105      		cpc r25,__zero_reg__
 188 0052 00F4      		brsh .L28
  68:quantum/keymap_common.c ****             break;
 189               		.loc 1 68 13 is_stmt 1 view .LVU33
 190               	.LVL14:
 191               	.LBB7:
 192               	.LBI7:
 193               		.file 2 "tmk_core/common/report.h"
   1:tmk_core/common/report.h **** /*
   2:tmk_core/common/report.h **** Copyright 2011,2012 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/report.h **** 
   4:tmk_core/common/report.h **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/report.h **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/report.h **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/report.h **** (at your option) any later version.
   8:tmk_core/common/report.h **** 
   9:tmk_core/common/report.h **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/report.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/report.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/report.h **** GNU General Public License for more details.
  13:tmk_core/common/report.h **** 
  14:tmk_core/common/report.h **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/report.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/report.h **** */
  17:tmk_core/common/report.h **** 
  18:tmk_core/common/report.h **** #pragma once
  19:tmk_core/common/report.h **** 
  20:tmk_core/common/report.h **** #include <stdint.h>
  21:tmk_core/common/report.h **** #include <stdbool.h>
  22:tmk_core/common/report.h **** #include "keycode.h"
  23:tmk_core/common/report.h **** 
  24:tmk_core/common/report.h **** // clang-format off
  25:tmk_core/common/report.h **** 
  26:tmk_core/common/report.h **** /* HID report IDs */
  27:tmk_core/common/report.h **** enum hid_report_ids {
  28:tmk_core/common/report.h ****     REPORT_ID_KEYBOARD = 1,
  29:tmk_core/common/report.h ****     REPORT_ID_MOUSE,
  30:tmk_core/common/report.h ****     REPORT_ID_SYSTEM,
  31:tmk_core/common/report.h ****     REPORT_ID_CONSUMER,
  32:tmk_core/common/report.h ****     REPORT_ID_NKRO,
  33:tmk_core/common/report.h ****     REPORT_ID_JOYSTICK
  34:tmk_core/common/report.h **** };
  35:tmk_core/common/report.h **** 
  36:tmk_core/common/report.h **** /* Mouse buttons */
  37:tmk_core/common/report.h **** enum mouse_buttons {
  38:tmk_core/common/report.h ****     MOUSE_BTN1 = (1 << 0),
  39:tmk_core/common/report.h ****     MOUSE_BTN2 = (1 << 1),
  40:tmk_core/common/report.h ****     MOUSE_BTN3 = (1 << 2),
  41:tmk_core/common/report.h ****     MOUSE_BTN4 = (1 << 3),
  42:tmk_core/common/report.h ****     MOUSE_BTN5 = (1 << 4)
  43:tmk_core/common/report.h **** };
  44:tmk_core/common/report.h **** 
  45:tmk_core/common/report.h **** /* Consumer Page (0x0C)
  46:tmk_core/common/report.h ****  *
  47:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=75
  48:tmk_core/common/report.h ****  */
  49:tmk_core/common/report.h **** enum consumer_usages {
  50:tmk_core/common/report.h ****     // 15.5 Display Controls
  51:tmk_core/common/report.h ****     SNAPSHOT               = 0x065,
  52:tmk_core/common/report.h ****     BRIGHTNESS_UP          = 0x06F, // https://www.usb.org/sites/default/files/hutrr41_0.pdf
  53:tmk_core/common/report.h ****     BRIGHTNESS_DOWN        = 0x070,
  54:tmk_core/common/report.h ****     // 15.7 Transport Controls
  55:tmk_core/common/report.h ****     TRANSPORT_RECORD       = 0x0B2,
  56:tmk_core/common/report.h ****     TRANSPORT_FAST_FORWARD = 0x0B3,
  57:tmk_core/common/report.h ****     TRANSPORT_REWIND       = 0x0B4,
  58:tmk_core/common/report.h ****     TRANSPORT_NEXT_TRACK   = 0x0B5,
  59:tmk_core/common/report.h ****     TRANSPORT_PREV_TRACK   = 0x0B6,
  60:tmk_core/common/report.h ****     TRANSPORT_STOP         = 0x0B7,
  61:tmk_core/common/report.h ****     TRANSPORT_EJECT        = 0x0B8,
  62:tmk_core/common/report.h ****     TRANSPORT_RANDOM_PLAY  = 0x0B9,
  63:tmk_core/common/report.h ****     TRANSPORT_STOP_EJECT   = 0x0CC,
  64:tmk_core/common/report.h ****     TRANSPORT_PLAY_PAUSE   = 0x0CD,
  65:tmk_core/common/report.h ****     // 15.9.1 Audio Controls - Volume
  66:tmk_core/common/report.h ****     AUDIO_MUTE             = 0x0E2,
  67:tmk_core/common/report.h ****     AUDIO_VOL_UP           = 0x0E9,
  68:tmk_core/common/report.h ****     AUDIO_VOL_DOWN         = 0x0EA,
  69:tmk_core/common/report.h ****     // 15.15 Application Launch Buttons
  70:tmk_core/common/report.h ****     AL_CC_CONFIG           = 0x183,
  71:tmk_core/common/report.h ****     AL_EMAIL               = 0x18A,
  72:tmk_core/common/report.h ****     AL_CALCULATOR          = 0x192,
  73:tmk_core/common/report.h ****     AL_LOCAL_BROWSER       = 0x194,
  74:tmk_core/common/report.h ****     AL_LOCK                = 0x19E,
  75:tmk_core/common/report.h ****     AL_CONTROL_PANEL       = 0x19F,
  76:tmk_core/common/report.h ****     AL_ASSISTANT           = 0x1CB,
  77:tmk_core/common/report.h ****     AL_KEYBOARD_LAYOUT     = 0x1AE,
  78:tmk_core/common/report.h ****     // 15.16 Generic GUI Application Controls
  79:tmk_core/common/report.h ****     AC_MINIMIZE            = 0x206,
  80:tmk_core/common/report.h ****     AC_SEARCH              = 0x221,
  81:tmk_core/common/report.h ****     AC_HOME                = 0x223,
  82:tmk_core/common/report.h ****     AC_BACK                = 0x224,
  83:tmk_core/common/report.h ****     AC_FORWARD             = 0x225,
  84:tmk_core/common/report.h ****     AC_STOP                = 0x226,
  85:tmk_core/common/report.h ****     AC_REFRESH             = 0x227,
  86:tmk_core/common/report.h ****     AC_BOOKMARKS           = 0x22A
  87:tmk_core/common/report.h **** };
  88:tmk_core/common/report.h **** 
  89:tmk_core/common/report.h **** /* Generic Desktop Page (0x01)
  90:tmk_core/common/report.h ****  *
  91:tmk_core/common/report.h ****  * See https://www.usb.org/sites/default/files/documents/hut1_12v2.pdf#page=26
  92:tmk_core/common/report.h ****  */
  93:tmk_core/common/report.h **** enum desktop_usages {
  94:tmk_core/common/report.h ****     // 4.5.1 System Controls - Power Controls
  95:tmk_core/common/report.h ****     SYSTEM_POWER_DOWN = 0x81,
  96:tmk_core/common/report.h ****     SYSTEM_SLEEP      = 0x82,
  97:tmk_core/common/report.h ****     SYSTEM_WAKE_UP    = 0x83
  98:tmk_core/common/report.h **** };
  99:tmk_core/common/report.h **** 
 100:tmk_core/common/report.h **** // clang-format on
 101:tmk_core/common/report.h **** 
 102:tmk_core/common/report.h **** #define NKRO_SHARED_EP
 103:tmk_core/common/report.h **** /* key report size(NKRO or boot mode) */
 104:tmk_core/common/report.h **** #if defined(NKRO_ENABLE)
 105:tmk_core/common/report.h **** #    if defined(PROTOCOL_LUFA) || defined(PROTOCOL_CHIBIOS)
 106:tmk_core/common/report.h **** #        include "protocol/usb_descriptor.h"
 107:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (SHARED_EPSIZE - 2)
 108:tmk_core/common/report.h **** #    elif defined(PROTOCOL_ARM_ATSAM)
 109:tmk_core/common/report.h **** #        include "protocol/arm_atsam/usb/udi_device_epsize.h"
 110:tmk_core/common/report.h **** #        define KEYBOARD_REPORT_BITS (NKRO_EPSIZE - 1)
 111:tmk_core/common/report.h **** #        undef NKRO_SHARED_EP
 112:tmk_core/common/report.h **** #        undef MOUSE_SHARED_EP
 113:tmk_core/common/report.h **** #    else
 114:tmk_core/common/report.h **** #        error "NKRO not supported with this protocol"
 115:tmk_core/common/report.h **** #    endif
 116:tmk_core/common/report.h **** #endif
 117:tmk_core/common/report.h **** 
 118:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 119:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 9
 120:tmk_core/common/report.h **** #else
 121:tmk_core/common/report.h **** #    define KEYBOARD_REPORT_SIZE 8
 122:tmk_core/common/report.h **** #endif
 123:tmk_core/common/report.h **** 
 124:tmk_core/common/report.h **** #define KEYBOARD_REPORT_KEYS 6
 125:tmk_core/common/report.h **** 
 126:tmk_core/common/report.h **** /* VUSB hardcodes keyboard and mouse+extrakey only */
 127:tmk_core/common/report.h **** #if defined(PROTOCOL_VUSB)
 128:tmk_core/common/report.h **** #    undef KEYBOARD_SHARED_EP
 129:tmk_core/common/report.h **** #    undef MOUSE_SHARED_EP
 130:tmk_core/common/report.h **** #endif
 131:tmk_core/common/report.h **** 
 132:tmk_core/common/report.h **** #ifdef __cplusplus
 133:tmk_core/common/report.h **** extern "C" {
 134:tmk_core/common/report.h **** #endif
 135:tmk_core/common/report.h **** 
 136:tmk_core/common/report.h **** /*
 137:tmk_core/common/report.h ****  * keyboard report is 8-byte array retains state of 8 modifiers and 6 keys.
 138:tmk_core/common/report.h ****  *
 139:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7
 140:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 141:tmk_core/common/report.h ****  * desc |mods    |reserved|keys[0] |keys[1] |keys[2] |keys[3] |keys[4] |keys[5]
 142:tmk_core/common/report.h ****  *
 143:tmk_core/common/report.h ****  * It is exended to 16 bytes to retain 120keys+8mods when NKRO mode.
 144:tmk_core/common/report.h ****  *
 145:tmk_core/common/report.h ****  * byte |0       |1       |2       |3       |4       |5       |6       |7        ... |15
 146:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------     +--------
 147:tmk_core/common/report.h ****  * desc |mods    |bits[0] |bits[1] |bits[2] |bits[3] |bits[4] |bits[5] |bits[6]  ... |bit[14]
 148:tmk_core/common/report.h ****  *
 149:tmk_core/common/report.h ****  * mods retains state of 8 modifiers.
 150:tmk_core/common/report.h ****  *
 151:tmk_core/common/report.h ****  *  bit |0       |1       |2       |3       |4       |5       |6       |7
 152:tmk_core/common/report.h ****  * -----+--------+--------+--------+--------+--------+--------+--------+--------
 153:tmk_core/common/report.h ****  * desc |Lcontrol|Lshift  |Lalt    |Lgui    |Rcontrol|Rshift  |Ralt    |Rgui
 154:tmk_core/common/report.h ****  *
 155:tmk_core/common/report.h ****  */
 156:tmk_core/common/report.h **** typedef union {
 157:tmk_core/common/report.h ****     uint8_t raw[KEYBOARD_REPORT_SIZE];
 158:tmk_core/common/report.h ****     struct {
 159:tmk_core/common/report.h **** #ifdef KEYBOARD_SHARED_EP
 160:tmk_core/common/report.h ****         uint8_t report_id;
 161:tmk_core/common/report.h **** #endif
 162:tmk_core/common/report.h ****         uint8_t mods;
 163:tmk_core/common/report.h ****         uint8_t reserved;
 164:tmk_core/common/report.h ****         uint8_t keys[KEYBOARD_REPORT_KEYS];
 165:tmk_core/common/report.h ****     };
 166:tmk_core/common/report.h **** #ifdef NKRO_ENABLE
 167:tmk_core/common/report.h ****     struct nkro_report {
 168:tmk_core/common/report.h **** #    ifdef NKRO_SHARED_EP
 169:tmk_core/common/report.h ****         uint8_t report_id;
 170:tmk_core/common/report.h **** #    endif
 171:tmk_core/common/report.h ****         uint8_t mods;
 172:tmk_core/common/report.h ****         uint8_t bits[KEYBOARD_REPORT_BITS];
 173:tmk_core/common/report.h ****     } nkro;
 174:tmk_core/common/report.h **** #endif
 175:tmk_core/common/report.h **** } __attribute__((packed)) report_keyboard_t;
 176:tmk_core/common/report.h **** 
 177:tmk_core/common/report.h **** typedef struct {
 178:tmk_core/common/report.h ****     uint8_t  report_id;
 179:tmk_core/common/report.h ****     uint16_t usage;
 180:tmk_core/common/report.h **** } __attribute__((packed)) report_extra_t;
 181:tmk_core/common/report.h **** 
 182:tmk_core/common/report.h **** typedef struct {
 183:tmk_core/common/report.h **** #ifdef MOUSE_SHARED_EP
 184:tmk_core/common/report.h ****     uint8_t report_id;
 185:tmk_core/common/report.h **** #endif
 186:tmk_core/common/report.h ****     uint8_t buttons;
 187:tmk_core/common/report.h ****     int8_t  x;
 188:tmk_core/common/report.h ****     int8_t  y;
 189:tmk_core/common/report.h ****     int8_t  v;
 190:tmk_core/common/report.h ****     int8_t  h;
 191:tmk_core/common/report.h **** } __attribute__((packed)) report_mouse_t;
 192:tmk_core/common/report.h **** 
 193:tmk_core/common/report.h **** typedef struct {
 194:tmk_core/common/report.h **** #if JOYSTICK_AXES_COUNT > 0
 195:tmk_core/common/report.h ****     int8_t axes[JOYSTICK_AXES_COUNT];
 196:tmk_core/common/report.h **** #endif
 197:tmk_core/common/report.h **** 
 198:tmk_core/common/report.h **** #if JOYSTICK_BUTTON_COUNT > 0
 199:tmk_core/common/report.h ****     uint8_t buttons[(JOYSTICK_BUTTON_COUNT - 1) / 8 + 1];
 200:tmk_core/common/report.h **** #endif
 201:tmk_core/common/report.h **** } __attribute__((packed)) joystick_report_t;
 202:tmk_core/common/report.h **** 
 203:tmk_core/common/report.h **** /* keycode to system usage */
 204:tmk_core/common/report.h **** static inline uint16_t KEYCODE2SYSTEM(uint8_t key) {
 205:tmk_core/common/report.h ****     switch (key) {
 206:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 207:tmk_core/common/report.h ****             return SYSTEM_POWER_DOWN;
 208:tmk_core/common/report.h ****         case KC_SYSTEM_SLEEP:
 209:tmk_core/common/report.h ****             return SYSTEM_SLEEP;
 210:tmk_core/common/report.h ****         case KC_SYSTEM_WAKE:
 211:tmk_core/common/report.h ****             return SYSTEM_WAKE_UP;
 212:tmk_core/common/report.h ****         default:
 213:tmk_core/common/report.h ****             return 0;
 214:tmk_core/common/report.h ****     }
 215:tmk_core/common/report.h **** }
 216:tmk_core/common/report.h **** 
 217:tmk_core/common/report.h **** /* keycode to consumer usage */
 218:tmk_core/common/report.h **** static inline uint16_t KEYCODE2CONSUMER(uint8_t key) {
 194               		.loc 2 218 24 view .LVU34
 195               	.LBE7:
 219:tmk_core/common/report.h ****     switch (key) {
 196               		.loc 2 219 5 view .LVU35
  68:quantum/keymap_common.c ****             break;
 197               		.loc 1 68 27 is_stmt 0 view .LVU36
 198 0054 C85A      		subi r28,lo8(-(88))
 199 0056 D0E0      		ldi r29,0
 200 0058 CC0F      		lsl r28
 201 005a DD1F      		rol r29
 202 005c C050      		subi r28,lo8(-(CSWTCH.1))
 203 005e D040      		sbci r29,hi8(-(CSWTCH.1))
 204 0060 0990      		ld __tmp_reg__,Y+
 205 0062 D881      		ld r29,Y
 206 0064 C02D      		mov r28,__tmp_reg__
 207               	.LVL15:
  68:quantum/keymap_common.c ****             break;
 208               		.loc 1 68 27 view .LVU37
 209 0066 D464      		ori r29,68
 210               	.LVL16:
  69:quantum/keymap_common.c **** #endif
 211               		.loc 1 69 13 is_stmt 1 view .LVU38
 212 0068 00C0      		rjmp .L8
 213               	.LVL17:
 214               	.L7:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 215               		.loc 1 58 5 is_stmt 0 view .LVU39
 216 006a 8115      		cp r24,__zero_reg__
 217 006c 40E5      		ldi r20,80
 218 006e 9407      		cpc r25,r20
 219 0070 00F0      		brlo .+2
 220 0072 00C0      		rjmp .L12
 221 0074 C115      		cp r28,__zero_reg__
 222 0076 80E4      		ldi r24,64
 223 0078 D807      		cpc r29,r24
 224               	.LVL18:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 225               		.loc 1 58 5 view .LVU40
 226 007a 00F0      		brlo .+2
 227 007c 00C0      		rjmp .L13
 228 007e CE01      		movw r24,r28
 229 0080 9A95      		dec r25
 230 0082 8115      		cp r24,__zero_reg__
 231 0084 9F41      		sbci r25,31
 232 0086 00F4      		brsh .L28
 233               	.LVL19:
 234               	.L8:
 166:quantum/keymap_common.c **** }
 235               		.loc 1 166 5 is_stmt 1 view .LVU41
 167:quantum/keymap_common.c **** 
 236               		.loc 1 167 1 is_stmt 0 view .LVU42
 237 0088 CE01      		movw r24,r28
 238               	/* epilogue start */
 239 008a DF91      		pop r29
 240 008c CF91      		pop r28
 241 008e 0895      		ret
 242               	.LVL20:
 243               	.L5:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 244               		.loc 1 58 5 view .LVU43
 245 0090 8115      		cp r24,__zero_reg__
 246 0092 36E5      		ldi r19,86
 247 0094 9307      		cpc r25,r19
 248 0096 00F4      		brsh .L14
 249 0098 8115      		cp r24,__zero_reg__
 250 009a 45E5      		ldi r20,85
 251 009c 9407      		cpc r25,r20
 252 009e 00F0      		brlo .+2
 253 00a0 00C0      		rjmp .L15
 254 00a2 C115      		cp r28,__zero_reg__
 255 00a4 84E5      		ldi r24,84
 256 00a6 D807      		cpc r29,r24
 257               	.LVL21:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 258               		.loc 1 58 5 view .LVU44
 259 00a8 00F0      		brlo .+2
 260 00aa 00C0      		rjmp .L16
 261 00ac 9C2F      		mov r25,r28
 262 00ae 9695      		lsr r25
 263 00b0 9695      		lsr r25
 264 00b2 9E01      		movw r18,r28
 265 00b4 2370      		andi r18,3
 266 00b6 3327      		clr r19
 267 00b8 C115      		cp r28,__zero_reg__
 268 00ba D345      		sbci r29,83
 269 00bc 00F4      		brsh .+2
 270 00be 00C0      		rjmp .L35
 122:quantum/keymap_common.c ****             // Set toggle
 271               		.loc 1 122 54 is_stmt 1 view .LVU45
 124:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_TOGGLE(action_layer);
 272               		.loc 1 124 13 view .LVU46
 273               	.LVL22:
 125:quantum/keymap_common.c ****             break;
 274               		.loc 1 125 13 view .LVU47
 125:quantum/keymap_common.c ****             break;
 275               		.loc 1 125 28 is_stmt 0 view .LVU48
 276 00c0 C1E0      		ldi r28,lo8(1)
 277 00c2 D0E0      		ldi r29,0
 278               	.LVL23:
 125:quantum/keymap_common.c ****             break;
 279               		.loc 1 125 28 view .LVU49
 280 00c4 00C0      		rjmp 2f
 281               		1:
 282 00c6 CC0F      		lsl r28
 283 00c8 DD1F      		rol r29
 284               		2:
 285 00ca 2A95      		dec r18
 286 00cc 02F4      		brpl 1b
 287 00ce 30E2      		ldi r19,lo8(32)
 288 00d0 939F      		mul r25,r19
 289 00d2 C001      		movw r24,r0
 290 00d4 1124      		clr __zero_reg__
 291 00d6 C82B      		or r28,r24
 292 00d8 D92B      		or r29,r25
 293               	.LVL24:
 125:quantum/keymap_common.c ****             break;
 294               		.loc 1 125 28 view .LVU50
 295 00da DA68      		ori r29,138
 296               	.LVL25:
 126:quantum/keymap_common.c **** #endif
 297               		.loc 1 126 13 is_stmt 1 view .LVU51
 298 00dc 00C0      		rjmp .L8
 299               	.LVL26:
 300               	.L14:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 301               		.loc 1 58 5 is_stmt 0 view .LVU52
 302 00de C115      		cp r28,__zero_reg__
 303 00e0 8AE5      		ldi r24,90
 304 00e2 D807      		cpc r29,r24
 305               	.LVL27:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 306               		.loc 1 58 5 view .LVU53
 307 00e4 00F4      		brsh .L19
 308 00e6 C115      		cp r28,__zero_reg__
 309 00e8 99E5      		ldi r25,89
 310 00ea D907      		cpc r29,r25
 311 00ec 00F0      		brlo .+2
 312 00ee 00C0      		rjmp .L20
 313 00f0 C115      		cp r28,__zero_reg__
 314 00f2 28E5      		ldi r18,88
 315 00f4 D207      		cpc r29,r18
 316 00f6 00F4      		brsh .+2
 317 00f8 00C0      		rjmp .L28
 142:quantum/keymap_common.c ****             break;
 318               		.loc 1 142 13 is_stmt 1 view .LVU54
 142:quantum/keymap_common.c ****             break;
 319               		.loc 1 142 27 is_stmt 0 view .LVU55
 320 00fa DC2F      		mov r29,r28
 321 00fc CC27      		clr r28
 322               	.LVL28:
 142:quantum/keymap_common.c ****             break;
 323               		.loc 1 142 27 view .LVU56
 324 00fe C06F      		ori r28,240
 325 0100 D06A      		ori r29,160
 326               	.LVL29:
 143:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 327               		.loc 1 143 13 is_stmt 1 view .LVU57
 328 0102 00C0      		rjmp .L8
 329               	.LVL30:
 330               	.L19:
  58:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
 331               		.loc 1 58 5 is_stmt 0 view .LVU58
 332 0104 CE01      		movw r24,r28
 333 0106 9056      		subi r25,96
 334 0108 8115      		cp r24,__zero_reg__
 335 010a 9042      		sbci r25,32
 336 010c 00F0      		brlo .+2
 337 010e 00C0      		rjmp .L28
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 338               		.loc 1 152 13 is_stmt 1 view .LVU59
 152:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 339               		.loc 1 152 27 is_stmt 0 view .LVU60
 340 0110 8D2F      		mov r24,r29
 341 0112 8F71      		andi r24,lo8(31)
 342 0114 0E94 0000 		call mod_config
 343               	.LVL31:
 153:quantum/keymap_common.c ****             break;
 344               		.loc 1 153 13 is_stmt 1 view .LVU61
 153:quantum/keymap_common.c ****             break;
 345               		.loc 1 153 27 is_stmt 0 view .LVU62
 346 0118 90E0      		ldi r25,0
 347 011a 982F      		mov r25,r24
 348 011c 8827      		clr r24
 349               	.LVL32:
 153:quantum/keymap_common.c ****             break;
 350               		.loc 1 153 27 view .LVU63
 351 011e 8827      		clr r24
 352 0120 9F71      		andi r25,31
 353 0122 9C01      		movw r18,r24
 354 0124 2C2B      		or r18,r28
 355 0126 E901      		movw r28,r18
 356               	.LVL33:
 153:quantum/keymap_common.c ****             break;
 357               		.loc 1 153 27 view .LVU64
 358 0128 00C0      		rjmp .L39
 359               	.LVL34:
 360               	.L10:
  65:quantum/keymap_common.c ****             break;
 361               		.loc 1 65 13 is_stmt 1 view .LVU65
 362               	.LBB8:
 363               	.LBI8:
 204:tmk_core/common/report.h ****     switch (key) {
 364               		.loc 2 204 24 view .LVU66
 365               	.LBE8:
 205:tmk_core/common/report.h ****         case KC_SYSTEM_POWER:
 366               		.loc 2 205 5 view .LVU67
  65:quantum/keymap_common.c ****             break;
 367               		.loc 1 65 27 is_stmt 0 view .LVU68
 368 012a C55A      		subi r28,lo8(-(91))
 369 012c D0E0      		ldi r29,0
 370 012e C050      		subi r28,lo8(-(CSWTCH.0))
 371 0130 D040      		sbci r29,hi8(-(CSWTCH.0))
 372 0132 C881      		ld r28,Y
 373 0134 D0E0      		ldi r29,0
 374               	.LVL35:
  65:quantum/keymap_common.c ****             break;
 375               		.loc 1 65 27 view .LVU69
 376 0136 D064      		ori r29,64
 377               	.LVL36:
  66:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_BRIGHTNESS_DOWN:
 378               		.loc 1 66 13 is_stmt 1 view .LVU70
 379 0138 00C0      		rjmp .L8
 380               	.LVL37:
 381               	.L13:
 104:quantum/keymap_common.c ****             break;
 382               		.loc 1 104 13 view .LVU71
 104:quantum/keymap_common.c ****             break;
 383               		.loc 1 104 27 is_stmt 0 view .LVU72
 384 013a DF70      		andi r29,15
 385               	.LVL38:
 104:quantum/keymap_common.c ****             break;
 386               		.loc 1 104 27 view .LVU73
 387 013c D06A      		ori r29,160
 388               	.LVL39:
 105:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX:;
 389               		.loc 1 105 13 is_stmt 1 view .LVU74
 390 013e 00C0      		rjmp .L8
 391               	.LVL40:
 392               	.L12:
 106:quantum/keymap_common.c ****             // Layer set "GOTO"
 393               		.loc 1 106 34 view .LVU75
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 394               		.loc 1 108 13 view .LVU76
 109:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_SET(action_layer, when);
 395               		.loc 1 109 13 view .LVU77
 110:quantum/keymap_common.c ****             break;
 396               		.loc 1 110 13 view .LVU78
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 397               		.loc 1 108 37 is_stmt 0 view .LVU79
 398 0140 E4E0      		ldi r30,4
 399               		1:
 400 0142 9695      		lsr r25
 401 0144 8795      		ror r24
 402 0146 EA95      		dec r30
 403 0148 01F4      		brne 1b
 404               	.LVL41:
 108:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 405               		.loc 1 108 26 view .LVU80
 406 014a 8370      		andi r24,lo8(3)
 110:quantum/keymap_common.c ****             break;
 407               		.loc 1 110 28 view .LVU81
 408 014c 2C2F      		mov r18,r28
 409 014e 2695      		lsr r18
 410 0150 2695      		lsr r18
 411 0152 2370      		andi r18,lo8(3)
 412 0154 40E2      		ldi r20,lo8(32)
 413 0156 249F      		mul r18,r20
 414 0158 9001      		movw r18,r0
 415 015a 1124      		clr __zero_reg__
 416 015c 382B      		or r19,r24
 417 015e 8C2F      		mov r24,r28
 418 0160 8370      		andi r24,lo8(3)
 419 0162 C1E0      		ldi r28,lo8(1)
 420 0164 D0E0      		ldi r29,0
 421               	.LVL42:
 110:quantum/keymap_common.c ****             break;
 422               		.loc 1 110 28 view .LVU82
 423 0166 00C0      		rjmp 2f
 424               		1:
 425 0168 CC0F      		lsl r28
 426 016a DD1F      		rol r29
 427               		2:
 428 016c 8A95      		dec r24
 429 016e 02F4      		brpl 1b
 430 0170 C22B      		or r28,r18
 431 0172 D32B      		or r29,r19
 432               	.LVL43:
 433               	.L38:
 120:quantum/keymap_common.c ****             break;
 434               		.loc 1 120 28 view .LVU83
 435 0174 DC68      		ori r29,140
 436               	.LVL44:
 121:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX:;
 437               		.loc 1 121 13 is_stmt 1 view .LVU84
 438 0176 00C0      		rjmp .L8
 439               	.LVL45:
 440               	.L6:
 112:quantum/keymap_common.c ****             // Momentary action_layer
 441               		.loc 1 112 48 view .LVU85
 114:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MOMENTARY(action_layer);
 442               		.loc 1 114 13 view .LVU86
 115:quantum/keymap_common.c ****             break;
 443               		.loc 1 115 13 view .LVU87
 115:quantum/keymap_common.c ****             break;
 444               		.loc 1 115 28 is_stmt 0 view .LVU88
 445 0178 D82F      		mov r29,r24
 446 017a CC27      		clr r28
 447               	.LVL46:
 115:quantum/keymap_common.c ****             break;
 448               		.loc 1 115 28 view .LVU89
 449 017c C16F      		ori r28,241
 450 017e D06A      		ori r29,160
 451               	.LVL47:
 116:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX:;
 452               		.loc 1 116 13 is_stmt 1 view .LVU90
 453 0180 00C0      		rjmp .L8
 454               	.LVL48:
 455               	.L35:
 117:quantum/keymap_common.c ****             // Set default action_layer
 456               		.loc 1 117 48 view .LVU91
 119:quantum/keymap_common.c ****             action.code  = ACTION_DEFAULT_LAYER_SET(action_layer);
 457               		.loc 1 119 13 view .LVU92
 120:quantum/keymap_common.c ****             break;
 458               		.loc 1 120 13 view .LVU93
 120:quantum/keymap_common.c ****             break;
 459               		.loc 1 120 28 is_stmt 0 view .LVU94
 460 0182 C1E0      		ldi r28,lo8(1)
 461 0184 D0E0      		ldi r29,0
 462               	.LVL49:
 120:quantum/keymap_common.c ****             break;
 463               		.loc 1 120 28 view .LVU95
 464 0186 00C0      		rjmp 2f
 465               		1:
 466 0188 CC0F      		lsl r28
 467 018a DD1F      		rol r29
 468               		2:
 469 018c 2A95      		dec r18
 470 018e 02F4      		brpl 1b
 471 0190 20E2      		ldi r18,lo8(32)
 472 0192 929F      		mul r25,r18
 473 0194 C001      		movw r24,r0
 474 0196 1124      		clr __zero_reg__
 475 0198 C82B      		or r28,r24
 476 019a D92B      		or r29,r25
 477 019c 00C0      		rjmp .L38
 478               	.LVL50:
 479               	.L16:
 129:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 480               		.loc 1 129 58 is_stmt 1 view .LVU96
 131:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_ONESHOT(action_layer);
 481               		.loc 1 131 13 view .LVU97
 132:quantum/keymap_common.c ****             break;
 482               		.loc 1 132 13 view .LVU98
 132:quantum/keymap_common.c ****             break;
 483               		.loc 1 132 28 is_stmt 0 view .LVU99
 484 019e DC2F      		mov r29,r28
 485 01a0 CC27      		clr r28
 486               	.LVL51:
 132:quantum/keymap_common.c ****             break;
 487               		.loc 1 132 28 view .LVU100
 488 01a2 C46F      		ori r28,244
 489 01a4 D06A      		ori r29,160
 490               	.LVL52:
 133:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX:;
 491               		.loc 1 133 13 is_stmt 1 view .LVU101
 492 01a6 00C0      		rjmp .L8
 493               	.LVL53:
 494               	.L15:
 134:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 495               		.loc 1 134 54 view .LVU102
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 496               		.loc 1 136 13 view .LVU103
 136:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 497               		.loc 1 136 27 is_stmt 0 view .LVU104
 498 01a8 0E94 0000 		call mod_config
 499               	.LVL54:
 137:quantum/keymap_common.c ****             break;
 500               		.loc 1 137 13 is_stmt 1 view .LVU105
 137:quantum/keymap_common.c ****             break;
 501               		.loc 1 137 27 is_stmt 0 view .LVU106
 502 01ac C82F      		mov r28,r24
 503               	.LVL55:
 137:quantum/keymap_common.c ****             break;
 504               		.loc 1 137 27 view .LVU107
 505 01ae D0E0      		ldi r29,0
 506 01b0 DC2F      		mov r29,r28
 507 01b2 CC27      		clr r28
 508 01b4 CC27      		clr r28
 509 01b6 DF71      		andi r29,31
 510               	.LVL56:
 511               	.L39:
 153:quantum/keymap_common.c ****             break;
 512               		.loc 1 153 27 view .LVU108
 513 01b8 D062      		ori r29,32
 514               	.LVL57:
 154:quantum/keymap_common.c **** #endif
 515               		.loc 1 154 13 is_stmt 1 view .LVU109
 516 01ba 00C0      		rjmp .L8
 517               	.LVL58:
 518               	.L20:
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 519               		.loc 1 145 13 view .LVU110
 145:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 520               		.loc 1 145 28 is_stmt 0 view .LVU111
 521 01bc 8C2F      		mov r24,r28
 522 01be 8F70      		andi r24,lo8(15)
 523 01c0 0E94 0000 		call mod_config
 524               	.LVL59:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 525               		.loc 1 146 13 is_stmt 1 view .LVU112
 147:quantum/keymap_common.c ****             break;
 526               		.loc 1 147 13 view .LVU113
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 527               		.loc 1 146 37 is_stmt 0 view .LVU114
 528 01c4 34E0      		ldi r19,4
 529               		1:
 530 01c6 D695      		lsr r29
 531 01c8 C795      		ror r28
 532 01ca 3A95      		dec r19
 533 01cc 01F4      		brne 1b
 534               	.LVL60:
 146:quantum/keymap_common.c ****             action.code  = ACTION_LAYER_MODS(action_layer, mod);
 535               		.loc 1 146 26 view .LVU115
 536 01ce CF70      		andi r28,lo8(15)
 147:quantum/keymap_common.c ****             break;
 537               		.loc 1 147 28 view .LVU116
 538 01d0 9C2F      		mov r25,r28
 539               	.LVL61:
 147:quantum/keymap_common.c ****             break;
 540               		.loc 1 147 28 view .LVU117
 541 01d2 EC01      		movw r28,r24
 542 01d4 D069      		ori r29,144
 543               	.LVL62:
 148:quantum/keymap_common.c **** #endif
 544               		.loc 1 148 13 is_stmt 1 view .LVU118
 545 01d6 00C0      		rjmp .L8
 546               		.cfi_endproc
 547               	.LFE112:
 549               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 550               		.weak	keymap_function_id_to_action
 552               	keymap_function_id_to_action:
 553               	.LVL63:
 554               	.LFB116:
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates function id to action
 186:quantum/keymap_common.c **** __attribute__((weak)) uint16_t keymap_function_id_to_action(uint16_t function_id) {
 555               		.loc 1 186 83 view -0
 556               		.cfi_startproc
 557               	/* prologue: function */
 558               	/* frame size = 0 */
 559               	/* stack size = 0 */
 560               	.L__stack_usage = 0
 187:quantum/keymap_common.c **** // The compiler sees the empty (weak) fn_actions and generates a warning
 188:quantum/keymap_common.c **** // This function should not be called in that case, so the warning is too strict
 189:quantum/keymap_common.c **** // If this function is called however, the keymap should have overridden fn_actions, and then the c
 190:quantum/keymap_common.c **** // is comparing against the wrong array
 191:quantum/keymap_common.c **** #pragma GCC diagnostic push
 192:quantum/keymap_common.c **** #pragma GCC diagnostic ignored "-Warray-bounds"
 193:quantum/keymap_common.c ****     return pgm_read_word(&fn_actions[function_id]);
 561               		.loc 1 193 5 view .LVU120
 562               	.LBB9:
 563               		.loc 1 193 12 view .LVU121
 564 0000 FC01      		movw r30,r24
 565 0002 EE0F      		lsl r30
 566 0004 FF1F      		rol r31
 567               	.LVL64:
 568               		.loc 1 193 12 is_stmt 0 view .LVU122
 569 0006 E050      		subi r30,lo8(-(fn_actions))
 570 0008 F040      		sbci r31,hi8(-(fn_actions))
 571               	.LVL65:
 572               		.loc 1 193 12 is_stmt 1 view .LVU123
 573               		.loc 1 193 12 view .LVU124
 574               	/* #APP */
 575               	 ;  193 "quantum/keymap_common.c" 1
 576 000a 8591      		lpm r24, Z+
 577 000c 9491      		lpm r25, Z
 578               		
 579               	 ;  0 "" 2
 580               	.LVL66:
 581               		.loc 1 193 12 view .LVU125
 582               	/* #NOAPP */
 583               	/* epilogue start */
 584               	.LBE9:
 194:quantum/keymap_common.c **** #pragma GCC diagnostic pop
 195:quantum/keymap_common.c **** }
 585               		.loc 1 195 1 is_stmt 0 view .LVU126
 586 000e 0895      		ret
 587               		.cfi_endproc
 588               	.LFE116:
 590               		.section	.rodata.CSWTCH.1,"a"
 593               	CSWTCH.1:
 594 0000 E200      		.word	226
 595 0002 E900      		.word	233
 596 0004 EA00      		.word	234
 597 0006 B500      		.word	181
 598 0008 B600      		.word	182
 599 000a B700      		.word	183
 600 000c CD00      		.word	205
 601 000e 8301      		.word	387
 602 0010 CC00      		.word	204
 603 0012 8A01      		.word	394
 604 0014 9201      		.word	402
 605 0016 9401      		.word	404
 606 0018 2102      		.word	545
 607 001a 2302      		.word	547
 608 001c 2402      		.word	548
 609 001e 2502      		.word	549
 610 0020 2602      		.word	550
 611 0022 2702      		.word	551
 612 0024 2A02      		.word	554
 613 0026 B300      		.word	179
 614 0028 B400      		.word	180
 615 002a 6F00      		.word	111
 616 002c 7000      		.word	112
 617               		.section	.rodata.CSWTCH.0,"a"
 620               	CSWTCH.0:
 621 0000 81        		.byte	-127
 622 0001 82        		.byte	-126
 623 0002 83        		.byte	-125
 624               		.weak	fn_actions
 625               		.section	.progmem.data.fn_actions,"a"
 628               	fn_actions:
 629               		.text
 630               	.Letext0:
 631               		.file 3 "c:\\msys64\\mingw64\\avr\\include\\stdint.h"
 632               		.file 4 "tmk_core/common/keyboard.h"
 633               		.file 5 "tmk_core/common/keycode.h"
 634               		.file 6 "tmk_core/common/action_code.h"
 635               		.file 7 "c:\\msys64\\mingw64\\lib\\gcc\\avr\\8.4.0\\include\\stddef.h"
 636               		.file 8 "tmk_core/common/action_macro.h"
 637               		.file 9 "tmk_core/common/action.h"
 638               		.file 10 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 639               		.file 11 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 640               		.file 12 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 641               		.file 13 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 642               		.file 14 "c:\\msys64\\mingw64\\avr\\include\\stdio.h"
 643               		.file 15 "tmk_core/common/host.h"
 644               		.file 16 "tmk_core/common/debug.h"
 645               		.file 17 "quantum/keycode_config.h"
 646               		.file 18 "quantum/quantum_keycodes.h"
 647               		.file 19 "quantum/keymap.h"
 648               		.file 20 "tmk_core/common/action_layer.h"
 649               		.file 21 "tmk_core/common/timer.h"
 650               		.file 22 "tmk_core/common/action_util.h"
 651               		.file 23 "c:\\msys64\\mingw64\\avr\\include\\stdlib.h"
 652               		.file 24 "quantum/process_keycode/process_tap_dance.h"
 653               		.file 25 "quantum/quantum.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_common.c
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:4      *ABS*:000000000000003f __SREG__
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:13     .text.action_get_macro:0000000000000000 action_get_macro
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:37     .text.action_function:0000000000000000 action_function
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:56     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:113    .text.action_for_key:0000000000000000 action_for_key
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:593    .rodata.CSWTCH.1:0000000000000000 CSWTCH.1
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:620    .rodata.CSWTCH.0:0000000000000000 CSWTCH.0
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:552    .text.keymap_function_id_to_action:0000000000000000 keymap_function_id_to_action
C:\Users\renep\AppData\Local\Temp\ccaWfwSW.s:628    .progmem.data.fn_actions:0000000000000000 fn_actions

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
__do_copy_data
