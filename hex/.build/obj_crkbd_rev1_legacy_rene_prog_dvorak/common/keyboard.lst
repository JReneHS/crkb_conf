   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.disable_jtag,"ax",@progbits
  11               	.global	disable_jtag
  13               	disable_jtag:
  14               	.LFB105:
  15               		.file 1 "tmk_core/common/keyboard.c"
   1:tmk_core/common/keyboard.c **** /*
   2:tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:tmk_core/common/keyboard.c **** 
   4:tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:tmk_core/common/keyboard.c **** (at your option) any later version.
   8:tmk_core/common/keyboard.c **** 
   9:tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:tmk_core/common/keyboard.c **** 
  14:tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:tmk_core/common/keyboard.c **** */
  17:tmk_core/common/keyboard.c **** 
  18:tmk_core/common/keyboard.c **** #include <stdint.h>
  19:tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:tmk_core/common/keyboard.c **** #include "matrix.h"
  21:tmk_core/common/keyboard.c **** #include "keymap.h"
  22:tmk_core/common/keyboard.c **** #include "host.h"
  23:tmk_core/common/keyboard.c **** #include "led.h"
  24:tmk_core/common/keyboard.c **** #include "keycode.h"
  25:tmk_core/common/keyboard.c **** #include "timer.h"
  26:tmk_core/common/keyboard.c **** #include "print.h"
  27:tmk_core/common/keyboard.c **** #include "debug.h"
  28:tmk_core/common/keyboard.c **** #include "command.h"
  29:tmk_core/common/keyboard.c **** #include "util.h"
  30:tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  34:tmk_core/common/keyboard.c **** #    include "backlight.h"
  35:tmk_core/common/keyboard.c **** #endif
  36:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  37:tmk_core/common/keyboard.c **** #    include "bootmagic.h"
  38:tmk_core/common/keyboard.c **** #else
  39:tmk_core/common/keyboard.c **** #    include "magic.h"
  40:tmk_core/common/keyboard.c **** #endif
  41:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:tmk_core/common/keyboard.c **** #    include "mousekey.h"
  43:tmk_core/common/keyboard.c **** #endif
  44:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:tmk_core/common/keyboard.c **** #    include "ps2_mouse.h"
  46:tmk_core/common/keyboard.c **** #endif
  47:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:tmk_core/common/keyboard.c **** #    include "serial_mouse.h"
  49:tmk_core/common/keyboard.c **** #endif
  50:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:tmk_core/common/keyboard.c **** #    include "adb.h"
  52:tmk_core/common/keyboard.c **** #endif
  53:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  54:tmk_core/common/keyboard.c **** #    include "rgblight.h"
  55:tmk_core/common/keyboard.c **** #endif
  56:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
  57:tmk_core/common/keyboard.c **** #    include "encoder.h"
  58:tmk_core/common/keyboard.c **** #endif
  59:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  60:tmk_core/common/keyboard.c **** #    include "process_steno.h"
  61:tmk_core/common/keyboard.c **** #endif
  62:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  63:tmk_core/common/keyboard.c **** #    include "fauxclicky.h"
  64:tmk_core/common/keyboard.c **** #endif
  65:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  66:tmk_core/common/keyboard.c **** #    include "serial_link/system/serial_link.h"
  67:tmk_core/common/keyboard.c **** #endif
  68:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  69:tmk_core/common/keyboard.c **** #    include "visualizer/visualizer.h"
  70:tmk_core/common/keyboard.c **** #endif
  71:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  72:tmk_core/common/keyboard.c **** #    include "pointing_device.h"
  73:tmk_core/common/keyboard.c **** #endif
  74:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  75:tmk_core/common/keyboard.c **** #    include "process_midi.h"
  76:tmk_core/common/keyboard.c **** #endif
  77:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
  78:tmk_core/common/keyboard.c **** #    include "process_joystick.h"
  79:tmk_core/common/keyboard.c **** #endif
  80:tmk_core/common/keyboard.c **** #ifdef HD44780_ENABLE
  81:tmk_core/common/keyboard.c **** #    include "hd44780.h"
  82:tmk_core/common/keyboard.c **** #endif
  83:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
  84:tmk_core/common/keyboard.c **** #    include "qwiic.h"
  85:tmk_core/common/keyboard.c **** #endif
  86:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
  87:tmk_core/common/keyboard.c **** #    include "oled_driver.h"
  88:tmk_core/common/keyboard.c **** #endif
  89:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
  90:tmk_core/common/keyboard.c **** #    include "velocikey.h"
  91:tmk_core/common/keyboard.c **** #endif
  92:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
  93:tmk_core/common/keyboard.c **** #    include "via.h"
  94:tmk_core/common/keyboard.c **** #endif
  95:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
  96:tmk_core/common/keyboard.c **** #    include "dip_switch.h"
  97:tmk_core/common/keyboard.c **** #endif
  98:tmk_core/common/keyboard.c **** 
  99:tmk_core/common/keyboard.c **** // Only enable this if console is enabled to print to
 100:tmk_core/common/keyboard.c **** #if defined(DEBUG_MATRIX_SCAN_RATE) && defined(CONSOLE_ENABLE)
 101:tmk_core/common/keyboard.c **** static uint32_t matrix_timer      = 0;
 102:tmk_core/common/keyboard.c **** static uint32_t matrix_scan_count = 0;
 103:tmk_core/common/keyboard.c **** 
 104:tmk_core/common/keyboard.c **** void matrix_scan_perf_task(void) {
 105:tmk_core/common/keyboard.c ****     matrix_scan_count++;
 106:tmk_core/common/keyboard.c **** 
 107:tmk_core/common/keyboard.c ****     uint32_t timer_now = timer_read32();
 108:tmk_core/common/keyboard.c ****     if (TIMER_DIFF_32(timer_now, matrix_timer) > 1000) {
 109:tmk_core/common/keyboard.c ****         dprintf("matrix scan frequency: %d\n", matrix_scan_count);
 110:tmk_core/common/keyboard.c **** 
 111:tmk_core/common/keyboard.c ****         matrix_timer      = timer_now;
 112:tmk_core/common/keyboard.c ****         matrix_scan_count = 0;
 113:tmk_core/common/keyboard.c ****     }
 114:tmk_core/common/keyboard.c **** }
 115:tmk_core/common/keyboard.c **** #else
 116:tmk_core/common/keyboard.c **** #    define matrix_scan_perf_task()
 117:tmk_core/common/keyboard.c **** #endif
 118:tmk_core/common/keyboard.c **** 
 119:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 120:tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 121:tmk_core/common/keyboard.c **** static matrix_row_t   get_real_keys(uint8_t row, matrix_row_t rowdata) {
 122:tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
 123:tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
 124:tmk_core/common/keyboard.c ****         // read each key in the row data and check if the keymap defines it as a real key
 125:tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1 << col))) {
 126:tmk_core/common/keyboard.c ****             // this creates new row data, if a key is defined in the keymap, it will be set here
 127:tmk_core/common/keyboard.c ****             out |= 1 << col;
 128:tmk_core/common/keyboard.c ****         }
 129:tmk_core/common/keyboard.c ****     }
 130:tmk_core/common/keyboard.c ****     return out;
 131:tmk_core/common/keyboard.c **** }
 132:tmk_core/common/keyboard.c **** 
 133:tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata) {
 134:tmk_core/common/keyboard.c ****     rowdata &= rowdata - 1;  // if there are less than two bits (keys) set, rowdata will become zer
 135:tmk_core/common/keyboard.c ****     return rowdata;
 136:tmk_core/common/keyboard.c **** }
 137:tmk_core/common/keyboard.c **** 
 138:tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata) {
 139:tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
 140:tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
 141:tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
 142:tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
 143:tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 144:tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0) {
 145:tmk_core/common/keyboard.c ****         return false;
 146:tmk_core/common/keyboard.c ****     }
 147:tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 148:tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 149:tmk_core/common/keyboard.c ****     so they are filtered out.
 150:tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 151:tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 152:tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 153:tmk_core/common/keyboard.c ****     */
 154:tmk_core/common/keyboard.c ****     for (uint8_t i = 0; i < MATRIX_ROWS; i++) {
 155:tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)) {
 156:tmk_core/common/keyboard.c ****             return true;
 157:tmk_core/common/keyboard.c ****         }
 158:tmk_core/common/keyboard.c ****     }
 159:tmk_core/common/keyboard.c ****     return false;
 160:tmk_core/common/keyboard.c **** }
 161:tmk_core/common/keyboard.c **** 
 162:tmk_core/common/keyboard.c **** #endif
 163:tmk_core/common/keyboard.c **** 
 164:tmk_core/common/keyboard.c **** void disable_jtag(void) {
  16               		.loc 1 164 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 165:tmk_core/common/keyboard.c **** // To use PF4-7 (PC2-5 on ATmega32A), disable JTAG by writing JTD bit twice within four cycles.
 166:tmk_core/common/keyboard.c **** #if (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__) || defined(__AVR_AT90USB1286__) || 
 167:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  22               		.loc 1 167 5 view .LVU1
  23               		.loc 1 167 11 is_stmt 0 view .LVU2
  24 0000 85B7      		in r24,0x35
  25 0002 8068      		ori r24,lo8(-128)
  26 0004 85BF      		out 0x35,r24
 168:tmk_core/common/keyboard.c ****     MCUCR |= _BV(JTD);
  27               		.loc 1 168 5 is_stmt 1 view .LVU3
  28               		.loc 1 168 11 is_stmt 0 view .LVU4
  29 0006 85B7      		in r24,0x35
  30 0008 8068      		ori r24,lo8(-128)
  31 000a 85BF      		out 0x35,r24
  32               	/* epilogue start */
 169:tmk_core/common/keyboard.c **** #elif defined(__AVR_ATmega32A__)
 170:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 171:tmk_core/common/keyboard.c ****     MCUCSR |= _BV(JTD);
 172:tmk_core/common/keyboard.c **** #endif
 173:tmk_core/common/keyboard.c **** }
  33               		.loc 1 173 1 view .LVU5
  34 000c 0895      		ret
  35               		.cfi_endproc
  36               	.LFE105:
  38               		.section	.text.keyboard_pre_init_user,"ax",@progbits
  39               		.weak	keyboard_pre_init_user
  41               	keyboard_pre_init_user:
  42               	.LFB107:
 174:tmk_core/common/keyboard.c **** 
 175:tmk_core/common/keyboard.c **** /** \brief matrix_setup
 176:tmk_core/common/keyboard.c ****  *
 177:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 178:tmk_core/common/keyboard.c ****  */
 179:tmk_core/common/keyboard.c **** __attribute__((weak)) void matrix_setup(void) {}
 180:tmk_core/common/keyboard.c **** 
 181:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_user
 182:tmk_core/common/keyboard.c ****  *
 183:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 184:tmk_core/common/keyboard.c ****  */
 185:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_user(void) {}
  43               		.loc 1 185 57 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  49               		.loc 1 185 58 view .LVU7
  50               	/* epilogue start */
  51               		.loc 1 185 1 is_stmt 0 view .LVU8
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE107:
  56               		.set	keyboard_pre_init_user.localalias.0,keyboard_pre_init_user
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB120:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67               	/* epilogue start */
  68 0000 0895      		ret
  69               		.cfi_endproc
  70               	.LFE120:
  72               		.section	.text.keyboard_pre_init_kb,"ax",@progbits
  73               		.weak	keyboard_pre_init_kb
  75               	keyboard_pre_init_kb:
  76               	.LFB108:
 186:tmk_core/common/keyboard.c **** 
 187:tmk_core/common/keyboard.c **** /** \brief keyboard_pre_init_kb
 188:tmk_core/common/keyboard.c ****  *
 189:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 190:tmk_core/common/keyboard.c ****  */
 191:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_pre_init_kb(void) { keyboard_pre_init_user(); }
  77               		.loc 1 191 55 is_stmt 1 view -0
  78               		.cfi_startproc
  79               	/* prologue: function */
  80               	/* frame size = 0 */
  81               	/* stack size = 0 */
  82               	.L__stack_usage = 0
  83               		.loc 1 191 57 view .LVU10
  84 0000 0C94 0000 		jmp keyboard_pre_init_user
  85               	.LVL0:
  86               		.cfi_endproc
  87               	.LFE108:
  89               		.section	.text.keyboard_post_init_user,"ax",@progbits
  90               		.weak	keyboard_post_init_user
  92               	keyboard_post_init_user:
  93               	.LFB118:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE118:
 104               		.section	.text.keyboard_post_init_kb,"ax",@progbits
 105               		.weak	keyboard_post_init_kb
 107               	keyboard_post_init_kb:
 108               	.LFB110:
 192:tmk_core/common/keyboard.c **** 
 193:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_user
 194:tmk_core/common/keyboard.c ****  *
 195:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 196:tmk_core/common/keyboard.c ****  */
 197:tmk_core/common/keyboard.c **** 
 198:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_user() {}
 199:tmk_core/common/keyboard.c **** 
 200:tmk_core/common/keyboard.c **** /** \brief keyboard_post_init_kb
 201:tmk_core/common/keyboard.c ****  *
 202:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 203:tmk_core/common/keyboard.c ****  */
 204:tmk_core/common/keyboard.c **** 
 205:tmk_core/common/keyboard.c **** __attribute__((weak)) void keyboard_post_init_kb(void) { keyboard_post_init_user(); }
 109               		.loc 1 205 56 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
 115               		.loc 1 205 58 view .LVU12
 116 0000 0C94 0000 		jmp keyboard_post_init_user
 117               	.LVL1:
 118               		.cfi_endproc
 119               	.LFE110:
 121               		.section	.text.keyboard_setup,"ax",@progbits
 122               	.global	keyboard_setup
 124               	keyboard_setup:
 125               	.LFB111:
 206:tmk_core/common/keyboard.c **** 
 207:tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 208:tmk_core/common/keyboard.c ****  *
 209:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 210:tmk_core/common/keyboard.c ****  */
 211:tmk_core/common/keyboard.c **** void keyboard_setup(void) {
 126               		.loc 1 211 27 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 212:tmk_core/common/keyboard.c **** #ifndef NO_JTAG_DISABLE
 213:tmk_core/common/keyboard.c ****     disable_jtag();
 132               		.loc 1 213 5 view .LVU14
 133 0000 0E94 0000 		call disable_jtag
 134               	.LVL2:
 214:tmk_core/common/keyboard.c **** #endif
 215:tmk_core/common/keyboard.c ****     matrix_setup();
 135               		.loc 1 215 5 view .LVU15
 136 0004 0E94 0000 		call matrix_setup
 137               	.LVL3:
 216:tmk_core/common/keyboard.c ****     keyboard_pre_init_kb();
 138               		.loc 1 216 5 view .LVU16
 139 0008 0C94 0000 		jmp keyboard_pre_init_kb
 140               	.LVL4:
 141               		.cfi_endproc
 142               	.LFE111:
 144               		.section	.text.is_keyboard_master,"ax",@progbits
 145               		.weak	is_keyboard_master
 147               	is_keyboard_master:
 148               	.LFB112:
 217:tmk_core/common/keyboard.c **** }
 218:tmk_core/common/keyboard.c **** 
 219:tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 220:tmk_core/common/keyboard.c ****  *
 221:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 222:tmk_core/common/keyboard.c ****  */
 223:tmk_core/common/keyboard.c **** __attribute__((weak)) bool is_keyboard_master(void) { return true; }
 149               		.loc 1 223 53 view -0
 150               		.cfi_startproc
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 0 */
 154               	.L__stack_usage = 0
 155               		.loc 1 223 55 view .LVU18
 156               		.loc 1 223 1 is_stmt 0 view .LVU19
 157 0000 81E0      		ldi r24,lo8(1)
 158               	/* epilogue start */
 159 0002 0895      		ret
 160               		.cfi_endproc
 161               	.LFE112:
 163               		.section	.text.should_process_keypress,"ax",@progbits
 164               		.weak	should_process_keypress
 166               	should_process_keypress:
 167               	.LFB113:
 224:tmk_core/common/keyboard.c **** 
 225:tmk_core/common/keyboard.c **** /** \brief should_process_keypress
 226:tmk_core/common/keyboard.c ****  *
 227:tmk_core/common/keyboard.c ****  * Override this function if you have a condition where keypresses processing should change:
 228:tmk_core/common/keyboard.c ****  *   - splits where the slave side needs to process for rgb/oled functionality
 229:tmk_core/common/keyboard.c ****  */
 230:tmk_core/common/keyboard.c **** __attribute__((weak)) bool should_process_keypress(void) { return is_keyboard_master(); }
 168               		.loc 1 230 58 is_stmt 1 view -0
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174               		.loc 1 230 60 view .LVU21
 175               		.loc 1 230 67 is_stmt 0 view .LVU22
 176 0000 0C94 0000 		jmp is_keyboard_master
 177               	.LVL5:
 178               		.cfi_endproc
 179               	.LFE113:
 181               		.section	.text.keyboard_init,"ax",@progbits
 182               	.global	keyboard_init
 184               	keyboard_init:
 185               	.LFB114:
 231:tmk_core/common/keyboard.c **** 
 232:tmk_core/common/keyboard.c **** /** \brief keyboard_init
 233:tmk_core/common/keyboard.c ****  *
 234:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 235:tmk_core/common/keyboard.c ****  */
 236:tmk_core/common/keyboard.c **** void keyboard_init(void) {
 186               		.loc 1 236 26 is_stmt 1 view -0
 187               		.cfi_startproc
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 0 */
 191               	.L__stack_usage = 0
 237:tmk_core/common/keyboard.c ****     timer_init();
 192               		.loc 1 237 5 view .LVU24
 193 0000 0E94 0000 		call timer_init
 194               	.LVL6:
 238:tmk_core/common/keyboard.c ****     matrix_init();
 195               		.loc 1 238 5 view .LVU25
 196 0004 0E94 0000 		call matrix_init
 197               	.LVL7:
 239:tmk_core/common/keyboard.c **** #ifdef VIA_ENABLE
 240:tmk_core/common/keyboard.c ****     via_init();
 241:tmk_core/common/keyboard.c **** #endif
 242:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 243:tmk_core/common/keyboard.c ****     qwiic_init();
 244:tmk_core/common/keyboard.c **** #endif
 245:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 246:tmk_core/common/keyboard.c ****     oled_init(OLED_ROTATION_0);
 198               		.loc 1 246 5 view .LVU26
 199 0008 80E0      		ldi r24,0
 200 000a 0E94 0000 		call oled_init
 201               	.LVL8:
 247:tmk_core/common/keyboard.c **** #endif
 248:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 249:tmk_core/common/keyboard.c ****     ps2_mouse_init();
 250:tmk_core/common/keyboard.c **** #endif
 251:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 252:tmk_core/common/keyboard.c ****     serial_mouse_init();
 253:tmk_core/common/keyboard.c **** #endif
 254:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 255:tmk_core/common/keyboard.c ****     adb_mouse_init();
 256:tmk_core/common/keyboard.c **** #endif
 257:tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 258:tmk_core/common/keyboard.c ****     bootmagic();
 259:tmk_core/common/keyboard.c **** #else
 260:tmk_core/common/keyboard.c ****     magic();
 202               		.loc 1 260 5 view .LVU27
 203 000e 0E94 0000 		call magic
 204               	.LVL9:
 261:tmk_core/common/keyboard.c **** #endif
 262:tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 263:tmk_core/common/keyboard.c ****     backlight_init();
 264:tmk_core/common/keyboard.c **** #endif
 265:tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 266:tmk_core/common/keyboard.c ****     rgblight_init();
 267:tmk_core/common/keyboard.c **** #endif
 268:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 269:tmk_core/common/keyboard.c ****     encoder_init();
 270:tmk_core/common/keyboard.c **** #endif
 271:tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 272:tmk_core/common/keyboard.c ****     steno_init();
 273:tmk_core/common/keyboard.c **** #endif
 274:tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 275:tmk_core/common/keyboard.c ****     fauxclicky_init();
 276:tmk_core/common/keyboard.c **** #endif
 277:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 278:tmk_core/common/keyboard.c ****     pointing_device_init();
 279:tmk_core/common/keyboard.c **** #endif
 280:tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 281:tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 282:tmk_core/common/keyboard.c ****     eeconfig_update_keymap(keymap_config.raw);
 283:tmk_core/common/keyboard.c **** #endif
 284:tmk_core/common/keyboard.c **** #ifdef DIP_SWITCH_ENABLE
 285:tmk_core/common/keyboard.c ****     dip_switch_init();
 286:tmk_core/common/keyboard.c **** #endif
 287:tmk_core/common/keyboard.c **** 
 288:tmk_core/common/keyboard.c ****     keyboard_post_init_kb(); /* Always keep this last */
 205               		.loc 1 288 5 view .LVU28
 206 0012 0C94 0000 		jmp keyboard_post_init_kb
 207               	.LVL10:
 208               		.cfi_endproc
 209               	.LFE114:
 211               		.section	.text.keyboard_task,"ax",@progbits
 212               	.global	keyboard_task
 214               	keyboard_task:
 215               	.LFB115:
 289:tmk_core/common/keyboard.c **** }
 290:tmk_core/common/keyboard.c **** 
 291:tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 292:tmk_core/common/keyboard.c ****  *
 293:tmk_core/common/keyboard.c ****  * Do routine keyboard jobs:
 294:tmk_core/common/keyboard.c ****  *
 295:tmk_core/common/keyboard.c ****  * * scan matrix
 296:tmk_core/common/keyboard.c ****  * * handle mouse movements
 297:tmk_core/common/keyboard.c ****  * * run visualizer code
 298:tmk_core/common/keyboard.c ****  * * handle midi commands
 299:tmk_core/common/keyboard.c ****  * * light LEDs
 300:tmk_core/common/keyboard.c ****  *
 301:tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 302:tmk_core/common/keyboard.c ****  */
 303:tmk_core/common/keyboard.c **** void keyboard_task(void) {
 216               		.loc 1 303 26 view -0
 217               		.cfi_startproc
 218 0000 AF92      		push r10
 219               	.LCFI0:
 220               		.cfi_def_cfa_offset 3
 221               		.cfi_offset 10, -2
 222 0002 BF92      		push r11
 223               	.LCFI1:
 224               		.cfi_def_cfa_offset 4
 225               		.cfi_offset 11, -3
 226 0004 CF92      		push r12
 227               	.LCFI2:
 228               		.cfi_def_cfa_offset 5
 229               		.cfi_offset 12, -4
 230 0006 DF92      		push r13
 231               	.LCFI3:
 232               		.cfi_def_cfa_offset 6
 233               		.cfi_offset 13, -5
 234 0008 EF92      		push r14
 235               	.LCFI4:
 236               		.cfi_def_cfa_offset 7
 237               		.cfi_offset 14, -6
 238 000a FF92      		push r15
 239               	.LCFI5:
 240               		.cfi_def_cfa_offset 8
 241               		.cfi_offset 15, -7
 242 000c 0F93      		push r16
 243               	.LCFI6:
 244               		.cfi_def_cfa_offset 9
 245               		.cfi_offset 16, -8
 246 000e 1F93      		push r17
 247               	.LCFI7:
 248               		.cfi_def_cfa_offset 10
 249               		.cfi_offset 17, -9
 250 0010 CF93      		push r28
 251               	.LCFI8:
 252               		.cfi_def_cfa_offset 11
 253               		.cfi_offset 28, -10
 254 0012 DF93      		push r29
 255               	.LCFI9:
 256               		.cfi_def_cfa_offset 12
 257               		.cfi_offset 29, -11
 258 0014 CDB7      		in r28,__SP_L__
 259 0016 DEB7      		in r29,__SP_H__
 260               	.LCFI10:
 261               		.cfi_def_cfa_register 28
 262 0018 2A97      		sbiw r28,10
 263               	.LCFI11:
 264               		.cfi_def_cfa_offset 22
 265 001a 0FB6      		in __tmp_reg__,__SREG__
 266 001c F894      		cli
 267 001e DEBF      		out __SP_H__,r29
 268 0020 0FBE      		out __SREG__,__tmp_reg__
 269 0022 CDBF      		out __SP_L__,r28
 270               	/* prologue: function */
 271               	/* frame size = 10 */
 272               	/* stack size = 20 */
 273               	.L__stack_usage = 20
 304:tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 274               		.loc 1 304 5 view .LVU30
 305:tmk_core/common/keyboard.c ****     static uint8_t      led_status    = 0;
 275               		.loc 1 305 5 view .LVU31
 306:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_row    = 0;
 276               		.loc 1 306 5 view .LVU32
 277               	.LVL11:
 307:tmk_core/common/keyboard.c ****     matrix_row_t        matrix_change = 0;
 278               		.loc 1 307 5 view .LVU33
 308:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 309:tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 310:tmk_core/common/keyboard.c **** #endif
 311:tmk_core/common/keyboard.c **** 
 312:tmk_core/common/keyboard.c **** #if defined(OLED_DRIVER_ENABLE) && !defined(OLED_DISABLE_TIMEOUT)
 313:tmk_core/common/keyboard.c ****     uint8_t ret = matrix_scan();
 279               		.loc 1 313 5 view .LVU34
 280               		.loc 1 313 19 is_stmt 0 view .LVU35
 281 0024 0E94 0000 		call matrix_scan
 282               	.LVL12:
 283 0028 B82E      		mov r11,r24
 284               	.LVL13:
 314:tmk_core/common/keyboard.c **** #else
 315:tmk_core/common/keyboard.c ****     matrix_scan();
 316:tmk_core/common/keyboard.c **** #endif
 317:tmk_core/common/keyboard.c **** 
 318:tmk_core/common/keyboard.c ****     if (should_process_keypress()) {
 285               		.loc 1 318 5 is_stmt 1 view .LVU36
 286               		.loc 1 318 9 is_stmt 0 view .LVU37
 287 002a 0E94 0000 		call should_process_keypress
 288               	.LVL14:
 289               		.loc 1 318 8 view .LVU38
 290 002e 8823      		tst r24
 291 0030 01F4      		brne .+2
 292 0032 00C0      		rjmp .L12
 293 0034 80E0      		ldi r24,lo8(matrix_prev.5728)
 294 0036 C82E      		mov r12,r24
 295 0038 80E0      		ldi r24,hi8(matrix_prev.5728)
 296 003a D82E      		mov r13,r24
 297 003c 10E0      		ldi r17,0
 298 003e 00E0      		ldi r16,0
 299               	.LVL15:
 300               	.L19:
 301               		.loc 1 318 8 view .LVU39
 302 0040 A02E      		mov r10,r16
 303               	.LVL16:
 304               	.LBB7:
 319:tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 320:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 305               		.loc 1 320 13 is_stmt 1 view .LVU40
 306               		.loc 1 320 29 is_stmt 0 view .LVU41
 307 0042 802F      		mov r24,r16
 308 0044 0E94 0000 		call matrix_get_row
 309               	.LVL17:
 310 0048 E82E      		mov r14,r24
 311               	.LVL18:
 321:tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 312               		.loc 1 321 13 is_stmt 1 view .LVU42
 313               		.loc 1 321 53 is_stmt 0 view .LVU43
 314 004a F601      		movw r30,r12
 315 004c F190      		ld r15,Z+
 316 004e 6F01      		movw r12,r30
 317               	.LVL19:
 322:tmk_core/common/keyboard.c ****             if (matrix_change) {
 318               		.loc 1 322 13 is_stmt 1 view .LVU44
 319               		.loc 1 322 16 is_stmt 0 view .LVU45
 320 0050 F816      		cp r15,r24
 321 0052 01F4      		brne .+2
 322 0054 00C0      		rjmp .L13
 323               	.LBB8:
 323:tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 324:tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 325:tmk_core/common/keyboard.c ****                     continue;
 326:tmk_core/common/keyboard.c ****                 }
 327:tmk_core/common/keyboard.c **** #endif
 328:tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 324               		.loc 1 328 17 is_stmt 1 view .LVU46
 325               		.loc 1 328 21 is_stmt 0 view .LVU47
 326 0056 8091 0000 		lds r24,debug_config
 327               		.loc 1 328 20 view .LVU48
 328 005a 81FD      		sbrc r24,1
 329               		.loc 1 328 35 is_stmt 1 discriminator 1 view .LVU49
 330 005c 0E94 0000 		call matrix_print
 331               	.LVL20:
 332               	.L14:
 333               	.LBE8:
 321:tmk_core/common/keyboard.c ****             if (matrix_change) {
 334               		.loc 1 321 27 is_stmt 0 view .LVU50
 335 0060 9F2D      		mov r25,r15
 336 0062 9E25      		eor r25,r14
 337               	.LBB12:
 329:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 338               		.loc 1 329 17 is_stmt 1 view .LVU51
 339               	.LVL21:
 330:tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 340               		.loc 1 330 17 view .LVU52
 341               	.LBB9:
 342               		.loc 1 330 22 view .LVU53
 343               		.loc 1 330 37 view .LVU54
 344               		.loc 1 330 30 is_stmt 0 view .LVU55
 345 0064 80E0      		ldi r24,0
 346               	.LBE9:
 329:tmk_core/common/keyboard.c ****                 matrix_row_t col_mask = 1;
 347               		.loc 1 329 30 view .LVU56
 348 0066 FF24      		clr r15
 349 0068 F394      		inc r15
 350               	.LVL22:
 351               	.L18:
 352               	.LBB10:
 331:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 353               		.loc 1 331 21 is_stmt 1 view .LVU57
 354               		.loc 1 331 25 is_stmt 0 view .LVU58
 355 006a 292F      		mov r18,r25
 356 006c 2F21      		and r18,r15
 357               		.loc 1 331 24 view .LVU59
 358 006e 01F0      		breq .L15
 332:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 359               		.loc 1 332 25 is_stmt 1 view .LVU60
 360               		.loc 1 332 49 is_stmt 0 view .LVU61
 361 0070 8E83      		std Y+6,r24
 362 0072 AF82      		std Y+7,r10
 333:tmk_core/common/keyboard.c ****                             .key = (keypos_t){.row = r, .col = c}, .pressed = (matrix_row & col_mas
 363               		.loc 1 333 91 view .LVU62
 364 0074 EF20      		and r14,r15
 365               	.LVL23:
 366               		.loc 1 333 91 view .LVU63
 367 0076 81E0      		ldi r24,lo8(1)
 368               	.LVL24:
 369               		.loc 1 333 91 view .LVU64
 370 0078 01F4      		brne .L16
 371 007a 80E0      		ldi r24,0
 372               	.L16:
 332:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 373               		.loc 1 332 49 view .LVU65
 374 007c 8887      		std Y+8,r24
 375               		.loc 1 333 113 view .LVU66
 376 007e 0E94 0000 		call timer_read
 377               	.LVL25:
 378               		.loc 1 333 126 view .LVU67
 379 0082 8160      		ori r24,1
 332:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 380               		.loc 1 332 49 view .LVU68
 381 0084 782F      		mov r23,r24
 382 0086 9A87      		std Y+10,r25
 383 0088 8987      		std Y+9,r24
 332:tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 384               		.loc 1 332 25 view .LVU69
 385 008a 4E81      		ldd r20,Y+6
 386 008c 5F81      		ldd r21,Y+7
 387 008e 6885      		ldd r22,Y+8
 388 0090 8A85      		ldd r24,Y+10
 389 0092 0E94 0000 		call action_exec
 390               	.LVL26:
 334:tmk_core/common/keyboard.c ****                         });
 335:tmk_core/common/keyboard.c ****                         // record a processed key
 336:tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= col_mask;
 391               		.loc 1 336 25 is_stmt 1 view .LVU70
 392               		.loc 1 336 40 is_stmt 0 view .LVU71
 393 0096 F801      		movw r30,r16
 394 0098 E050      		subi r30,lo8(-(matrix_prev.5728))
 395 009a F040      		sbci r31,hi8(-(matrix_prev.5728))
 396 009c 8081      		ld r24,Z
 397 009e F826      		eor r15,r24
 398               	.LVL27:
 399               		.loc 1 336 40 view .LVU72
 400 00a0 F082      		st Z,r15
 337:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 338:tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 339:tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 340:tmk_core/common/keyboard.c **** #endif
 341:tmk_core/common/keyboard.c ****                             // process a key per task call
 342:tmk_core/common/keyboard.c ****                             goto MATRIX_LOOP_END;
 401               		.loc 1 342 29 is_stmt 1 view .LVU73
 402               	.LVL28:
 403               	.L17:
 404               		.loc 1 342 29 is_stmt 0 view .LVU74
 405               	.LBE10:
 406               	.LBE12:
 407               	.LBE7:
 343:tmk_core/common/keyboard.c ****                     }
 344:tmk_core/common/keyboard.c ****                 }
 345:tmk_core/common/keyboard.c ****             }
 346:tmk_core/common/keyboard.c ****         }
 347:tmk_core/common/keyboard.c ****     }
 348:tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 349:tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 350:tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 351:tmk_core/common/keyboard.c ****     if (!keys_processed)
 352:tmk_core/common/keyboard.c **** #endif
 353:tmk_core/common/keyboard.c ****         action_exec(TICK);
 354:tmk_core/common/keyboard.c **** 
 355:tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 356:tmk_core/common/keyboard.c **** 
 357:tmk_core/common/keyboard.c **** #ifdef DEBUG_MATRIX_SCAN_RATE
 358:tmk_core/common/keyboard.c ****     matrix_scan_perf_task();
 359:tmk_core/common/keyboard.c **** #endif
 360:tmk_core/common/keyboard.c **** 
 361:tmk_core/common/keyboard.c **** #if defined(RGBLIGHT_ENABLE)
 362:tmk_core/common/keyboard.c ****     rgblight_task();
 363:tmk_core/common/keyboard.c **** #endif
 364:tmk_core/common/keyboard.c **** 
 365:tmk_core/common/keyboard.c **** #if defined(BACKLIGHT_ENABLE)
 366:tmk_core/common/keyboard.c **** #    if defined(BACKLIGHT_PIN) || defined(BACKLIGHT_PINS)
 367:tmk_core/common/keyboard.c ****     backlight_task();
 368:tmk_core/common/keyboard.c **** #    endif
 369:tmk_core/common/keyboard.c **** #endif
 370:tmk_core/common/keyboard.c **** 
 371:tmk_core/common/keyboard.c **** #ifdef ENCODER_ENABLE
 372:tmk_core/common/keyboard.c ****     encoder_read();
 373:tmk_core/common/keyboard.c **** #endif
 374:tmk_core/common/keyboard.c **** 
 375:tmk_core/common/keyboard.c **** #ifdef QWIIC_ENABLE
 376:tmk_core/common/keyboard.c ****     qwiic_task();
 377:tmk_core/common/keyboard.c **** #endif
 378:tmk_core/common/keyboard.c **** 
 379:tmk_core/common/keyboard.c **** #ifdef OLED_DRIVER_ENABLE
 380:tmk_core/common/keyboard.c ****     oled_task();
 408               		.loc 1 380 5 is_stmt 1 view .LVU75
 409 00a2 0E94 0000 		call oled_task
 410               	.LVL29:
 381:tmk_core/common/keyboard.c **** #    ifndef OLED_DISABLE_TIMEOUT
 382:tmk_core/common/keyboard.c ****     // Wake up oled if user is using those fabulous keys!
 383:tmk_core/common/keyboard.c ****     if (ret) oled_on();
 411               		.loc 1 383 5 view .LVU76
 412               		.loc 1 383 8 is_stmt 0 view .LVU77
 413 00a6 B110      		cpse r11,__zero_reg__
 414               		.loc 1 383 14 is_stmt 1 discriminator 1 view .LVU78
 415 00a8 0E94 0000 		call oled_on
 416               	.LVL30:
 417               	.L20:
 384:tmk_core/common/keyboard.c **** #    endif
 385:tmk_core/common/keyboard.c **** #endif
 386:tmk_core/common/keyboard.c **** 
 387:tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 388:tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 389:tmk_core/common/keyboard.c ****     mousekey_task();
 390:tmk_core/common/keyboard.c **** #endif
 391:tmk_core/common/keyboard.c **** 
 392:tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 393:tmk_core/common/keyboard.c ****     ps2_mouse_task();
 394:tmk_core/common/keyboard.c **** #endif
 395:tmk_core/common/keyboard.c **** 
 396:tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 397:tmk_core/common/keyboard.c ****     serial_mouse_task();
 398:tmk_core/common/keyboard.c **** #endif
 399:tmk_core/common/keyboard.c **** 
 400:tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 401:tmk_core/common/keyboard.c ****     adb_mouse_task();
 402:tmk_core/common/keyboard.c **** #endif
 403:tmk_core/common/keyboard.c **** 
 404:tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 405:tmk_core/common/keyboard.c ****     serial_link_update();
 406:tmk_core/common/keyboard.c **** #endif
 407:tmk_core/common/keyboard.c **** 
 408:tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 409:tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 410:tmk_core/common/keyboard.c **** #endif
 411:tmk_core/common/keyboard.c **** 
 412:tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 413:tmk_core/common/keyboard.c ****     pointing_device_task();
 414:tmk_core/common/keyboard.c **** #endif
 415:tmk_core/common/keyboard.c **** 
 416:tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 417:tmk_core/common/keyboard.c ****     midi_task();
 418:tmk_core/common/keyboard.c **** #endif
 419:tmk_core/common/keyboard.c **** 
 420:tmk_core/common/keyboard.c **** #ifdef VELOCIKEY_ENABLE
 421:tmk_core/common/keyboard.c ****     if (velocikey_enabled()) {
 422:tmk_core/common/keyboard.c ****         velocikey_decelerate();
 423:tmk_core/common/keyboard.c ****     }
 424:tmk_core/common/keyboard.c **** #endif
 425:tmk_core/common/keyboard.c **** 
 426:tmk_core/common/keyboard.c **** #ifdef JOYSTICK_ENABLE
 427:tmk_core/common/keyboard.c ****     joystick_task();
 428:tmk_core/common/keyboard.c **** #endif
 429:tmk_core/common/keyboard.c **** 
 430:tmk_core/common/keyboard.c ****     // update LED
 431:tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 418               		.loc 1 431 5 view .LVU79
 419               		.loc 1 431 23 is_stmt 0 view .LVU80
 420 00ac 0E94 0000 		call host_keyboard_leds
 421               	.LVL31:
 422               		.loc 1 431 8 view .LVU81
 423 00b0 9091 0000 		lds r25,led_status.5729
 424 00b4 8917      		cp r24,r25
 425 00b6 01F0      		breq .L11
 432:tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 426               		.loc 1 432 9 is_stmt 1 view .LVU82
 427               		.loc 1 432 22 is_stmt 0 view .LVU83
 428 00b8 0E94 0000 		call host_keyboard_leds
 429               	.LVL32:
 430               		.loc 1 432 20 view .LVU84
 431 00bc 8093 0000 		sts led_status.5729,r24
 433:tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 432               		.loc 1 433 9 is_stmt 1 view .LVU85
 433               	.LVL33:
 434               	.LBB14:
 435               	.LBI14:
 434:tmk_core/common/keyboard.c ****     }
 435:tmk_core/common/keyboard.c **** }
 436:tmk_core/common/keyboard.c **** 
 437:tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 438:tmk_core/common/keyboard.c ****  *
 439:tmk_core/common/keyboard.c ****  * FIXME: needs doc
 440:tmk_core/common/keyboard.c ****  */
 441:tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds) {
 436               		.loc 1 441 6 view .LVU86
 437               	.LBB15:
 442:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 438               		.loc 1 442 5 view .LVU87
 443:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 439               		.loc 1 443 36 view .LVU88
 444:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 440               		.loc 1 444 25 view .LVU89
 445:tmk_core/common/keyboard.c ****         debug("\n");
 441               		.loc 1 445 20 view .LVU90
 446:tmk_core/common/keyboard.c ****     }
 447:tmk_core/common/keyboard.c ****     led_set(leds);
 442               		.loc 1 447 5 view .LVU91
 443               	/* epilogue start */
 444               	.LBE15:
 445               	.LBE14:
 435:tmk_core/common/keyboard.c **** 
 446               		.loc 1 435 1 is_stmt 0 view .LVU92
 447 00c0 2A96      		adiw r28,10
 448 00c2 0FB6      		in __tmp_reg__,__SREG__
 449 00c4 F894      		cli
 450 00c6 DEBF      		out __SP_H__,r29
 451 00c8 0FBE      		out __SREG__,__tmp_reg__
 452 00ca CDBF      		out __SP_L__,r28
 453 00cc DF91      		pop r29
 454 00ce CF91      		pop r28
 455 00d0 1F91      		pop r17
 456 00d2 0F91      		pop r16
 457 00d4 FF90      		pop r15
 458 00d6 EF90      		pop r14
 459 00d8 DF90      		pop r13
 460 00da CF90      		pop r12
 461 00dc BF90      		pop r11
 462               	.LVL34:
 435:tmk_core/common/keyboard.c **** 
 463               		.loc 1 435 1 view .LVU93
 464 00de AF90      		pop r10
 465               	.LBB17:
 466               	.LBB16:
 467               		.loc 1 447 5 view .LVU94
 468 00e0 0C94 0000 		jmp led_set
 469               	.LVL35:
 470               	.L15:
 471               		.loc 1 447 5 view .LVU95
 472               	.LBE16:
 473               	.LBE17:
 474               	.LBB18:
 475               	.LBB13:
 476               	.LBB11:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 477               		.loc 1 330 54 is_stmt 1 discriminator 2 view .LVU96
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 478               		.loc 1 330 55 is_stmt 0 discriminator 2 view .LVU97
 479 00e4 8F5F      		subi r24,lo8(-(1))
 480               	.LVL36:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 481               		.loc 1 330 68 discriminator 2 view .LVU98
 482 00e6 FF0C      		lsl r15
 483               	.LVL37:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 484               		.loc 1 330 37 is_stmt 1 discriminator 2 view .LVU99
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 485               		.loc 1 330 17 is_stmt 0 discriminator 2 view .LVU100
 486 00e8 8630      		cpi r24,lo8(6)
 487 00ea 01F0      		breq .+2
 488 00ec 00C0      		rjmp .L18
 489               	.LVL38:
 490               	.L13:
 330:tmk_core/common/keyboard.c ****                     if (matrix_change & col_mask) {
 491               		.loc 1 330 17 discriminator 2 view .LVU101
 492               	.LBE11:
 493               	.LBE13:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 494               		.loc 1 319 46 is_stmt 1 view .LVU102
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 495               		.loc 1 319 29 view .LVU103
 496 00ee 0F5F      		subi r16,-1
 497 00f0 1F4F      		sbci r17,-1
 498               	.LVL39:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 499               		.loc 1 319 9 is_stmt 0 view .LVU104
 500 00f2 0830      		cpi r16,8
 501 00f4 1105      		cpc r17,__zero_reg__
 502 00f6 01F0      		breq .+2
 503 00f8 00C0      		rjmp .L19
 504               	.LVL40:
 505               	.L12:
 319:tmk_core/common/keyboard.c ****             matrix_row    = matrix_get_row(r);
 506               		.loc 1 319 9 view .LVU105
 507               	.LBE18:
 353:tmk_core/common/keyboard.c **** 
 508               		.loc 1 353 9 is_stmt 1 view .LVU106
 353:tmk_core/common/keyboard.c **** 
 509               		.loc 1 353 21 is_stmt 0 view .LVU107
 510 00fa 8FEF      		ldi r24,lo8(-1)
 511 00fc 8983      		std Y+1,r24
 512 00fe 8A83      		std Y+2,r24
 513 0100 1B82      		std Y+3,__zero_reg__
 514 0102 0E94 0000 		call timer_read
 515               	.LVL41:
 516 0106 8160      		ori r24,1
 517 0108 782F      		mov r23,r24
 518 010a 9D83      		std Y+5,r25
 519 010c 8C83      		std Y+4,r24
 353:tmk_core/common/keyboard.c **** 
 520               		.loc 1 353 9 view .LVU108
 521 010e 4981      		ldd r20,Y+1
 522 0110 5A81      		ldd r21,Y+2
 523 0112 6B81      		ldd r22,Y+3
 524 0114 8D81      		ldd r24,Y+5
 525 0116 0E94 0000 		call action_exec
 526               	.LVL42:
 527 011a 00C0      		rjmp .L17
 528               	.L11:
 529               	/* epilogue start */
 435:tmk_core/common/keyboard.c **** 
 530               		.loc 1 435 1 view .LVU109
 531 011c 2A96      		adiw r28,10
 532 011e 0FB6      		in __tmp_reg__,__SREG__
 533 0120 F894      		cli
 534 0122 DEBF      		out __SP_H__,r29
 535 0124 0FBE      		out __SREG__,__tmp_reg__
 536 0126 CDBF      		out __SP_L__,r28
 537 0128 DF91      		pop r29
 538 012a CF91      		pop r28
 539 012c 1F91      		pop r17
 540 012e 0F91      		pop r16
 541 0130 FF90      		pop r15
 542 0132 EF90      		pop r14
 543 0134 DF90      		pop r13
 544 0136 CF90      		pop r12
 545 0138 BF90      		pop r11
 546               	.LVL43:
 435:tmk_core/common/keyboard.c **** 
 547               		.loc 1 435 1 view .LVU110
 548 013a AF90      		pop r10
 549 013c 0895      		ret
 550               		.cfi_endproc
 551               	.LFE115:
 553               		.section	.text.keyboard_set_leds,"ax",@progbits
 554               	.global	keyboard_set_leds
 556               	keyboard_set_leds:
 557               	.LVL44:
 558               	.LFB116:
 441:tmk_core/common/keyboard.c ****     if (debug_keyboard) {
 559               		.loc 1 441 38 is_stmt 1 view -0
 560               		.cfi_startproc
 561               	/* prologue: function */
 562               	/* frame size = 0 */
 563               	/* stack size = 0 */
 564               	.L__stack_usage = 0
 442:tmk_core/common/keyboard.c ****         debug("keyboard_set_led: ");
 565               		.loc 1 442 5 view .LVU112
 443:tmk_core/common/keyboard.c ****         debug_hex8(leds);
 566               		.loc 1 443 36 view .LVU113
 444:tmk_core/common/keyboard.c ****         debug("\n");
 567               		.loc 1 444 25 view .LVU114
 445:tmk_core/common/keyboard.c ****     }
 568               		.loc 1 445 20 view .LVU115
 569               		.loc 1 447 5 view .LVU116
 570 0000 0C94 0000 		jmp led_set
 571               	.LVL45:
 572               		.loc 1 447 5 is_stmt 0 view .LVU117
 573               		.cfi_endproc
 574               	.LFE116:
 576               		.section	.bss.led_status.5729,"aw",@nobits
 579               	led_status.5729:
 580 0000 00        		.zero	1
 581               		.section	.bss.matrix_prev.5728,"aw",@nobits
 584               	matrix_prev.5728:
 585 0000 0000 0000 		.zero	8
 585      0000 0000 
 586               		.text
 587               	.Letext0:
 588               		.file 2 "c:\\msys64\\mingw64\\avr\\include\\stdint.h"
 589               		.file 3 "tmk_core/common/keyboard.h"
 590               		.file 4 "tmk_core/common/matrix.h"
 591               		.file 5 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 592               		.file 6 "tmk_core/common/action.h"
 593               		.file 7 "lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 594               		.file 8 "lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 595               		.file 9 "lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 596               		.file 10 "c:\\msys64\\mingw64\\avr\\include\\stdio.h"
 597               		.file 11 "tmk_core/common/host.h"
 598               		.file 12 "tmk_core/common/debug.h"
 599               		.file 13 "quantum/keycode_config.h"
 600               		.file 14 "quantum/keymap.h"
 601               		.file 15 "tmk_core/common/timer.h"
 602               		.file 16 "tmk_core/common/command.h"
 603               		.file 17 "tmk_core/common/action_layer.h"
 604               		.file 18 "drivers/oled/oled_driver.h"
 605               		.file 19 "tmk_core/common/led.h"
 606               		.file 20 "tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:4      *ABS*:000000000000003f __SREG__
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:13     .text.disable_jtag:0000000000000000 disable_jtag
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:41     .text.keyboard_pre_init_user:0000000000000000 keyboard_pre_init_user.localalias.0
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:60     .text.matrix_setup:0000000000000000 matrix_setup
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:75     .text.keyboard_pre_init_kb:0000000000000000 keyboard_pre_init_kb
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:92     .text.keyboard_post_init_user:0000000000000000 keyboard_post_init_user
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:107    .text.keyboard_post_init_kb:0000000000000000 keyboard_post_init_kb
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:124    .text.keyboard_setup:0000000000000000 keyboard_setup
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:147    .text.is_keyboard_master:0000000000000000 is_keyboard_master
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:166    .text.should_process_keypress:0000000000000000 should_process_keypress
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:184    .text.keyboard_init:0000000000000000 keyboard_init
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:214    .text.keyboard_task:0000000000000000 keyboard_task
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:584    .bss.matrix_prev.5728:0000000000000000 matrix_prev.5728
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:579    .bss.led_status.5729:0000000000000000 led_status.5729
C:\Users\renep\AppData\Local\Temp\cci17VXJ.s:556    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
oled_init
magic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
oled_task
oled_on
host_keyboard_leds
led_set
__do_clear_bss
